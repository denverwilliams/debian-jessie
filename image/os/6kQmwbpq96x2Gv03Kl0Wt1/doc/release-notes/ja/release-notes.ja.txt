
         Debian 8 (jessie) リリースノート (64 ビット PC 用)


---------------------------------------------------------------------

The Debian Documentation Project (http://www.debian.org/doc/)

    この文書はフリーソフトウェアです。あなたは、Free Software
    Foundation が公表した GNU 一般公有使用許諾の第二版の条件に基づい
    て、本文書の再頒布および変更を行うことができます。

    本プログラムはその有用性が期待されて頒布されるものですが、市場性
    や特定の目的への適合性に関する暗黙の保証も含め、いかなる保証も行
    いません。詳細については GNU 一般公有使用許諾書をご覧ください。

    あなたは、このプログラムとともに、GNU 一般公有使用許諾の写しを受
    け取っているはずです。そうでなければ Free Software Foundation,
    Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
    に手紙でお知らせください。

    この許諾文書は http://www.gnu.org/licenses/gpl-2.0.html (http://
    www.gnu.org/licenses/gpl-2.0.html) や、Debian の /usr/share/
    common-licenses/GPL-2 にあります。

---------------------------------------------------------------------

目次

1. はじめに

    1.1. この文書に関するバグを報告する
    1.2. アップグレードについての報告をする
    1.3. この文書のソース

2. Debian 8 の最新情報

    2.1. サポートするアーキテクチャ
    2.2. ディストリビューションの最新情報

        2.2.1. CD、DVD、Blu-ray ディスク
        2.2.2. GNOME デスクトップでの変更点
        2.2.3. 新しい標準 init システム (systemd)
        2.2.4. セキュリティ
        2.2.5. MariaDB が MySQL を引き継ぎます
        2.2.6. PHP アプリケーション
        2.2.7. Debian Games Blend
        2.2.8. Debian Med Blend からのニュース
        2.2.9. Debian Science Blend からのニュース
        2.2.10. Debian Geographical Information Systems (GIS) Blend
            からのニュース
        2.2.11. Debian Java チームからのニュース

3. インストールシステム

    3.1. インストールシステムの最新情報

        3.1.1. 主要な変更点
        3.1.2. 自動インストール

4. Debian 7 (wheezy) からのアップグレード

    4.1. アップグレードの準備

        4.1.1. あらゆるデータや設定情報をバックアップする
        4.1.2. 事前にユーザに通知する
        4.1.3. サービスのダウン期間の準備
        4.1.4. 復旧の準備
        4.1.5. アップグレード用の安全な環境の準備

    4.2. システムの状態をチェックする

        4.2.1. パッケージマネージャにおいて中断しているアクションの確
            認
        4.2.2. APT の pin 機能を無効にする
        4.2.3. パッケージの状態をチェックする
        4.2.4. proposed-updates セクション
        4.2.5. 非公式なソース

    4.3. APT の取得先 (ソース) の準備

        4.3.1. APT のインターネットソースの追加
        4.3.2. APT のローカルミラーソースの追加
        4.3.3. APT の光学メディアソースの追加

    4.4. パッケージのアップグレード

        4.4.1. セッションの記録
        4.4.2. パッケージリストの更新
        4.4.3. アップグレードするのに十分な領域があることを確認する
        4.4.4. システムの最小アップグレード
        4.4.5. システムのアップグレード

    4.5. アップグレード中の注意点

        4.5.1. 「即時設定は動作しません」で dist-upgrade が失敗する
        4.5.2. 予期されるパッケージの削除
        4.5.3. 衝突 (Conflicts) あるいは事前依存 (Pre-Depends) のルー
            プ
        4.5.4. ファイルの衝突
        4.5.5. 設定の変更
        4.5.6. コンソール接続へセッションの変更
        4.5.7. 特定のパッケージに対する特別な注意

    4.6. カーネルと関連パッケージのアップグレード

        4.6.1. カーネルメタパッケージのインストール
        4.6.2. ルート (/) および /usr ファイルシステムのマウントとチ
            ェックに関する変更

    4.7. 再起動の前にすべきこと
    4.8. 次期リリースへの準備

        4.8.1. 削除したパッケージを完全削除する

    4.9. 廃止予定のコンポーネント
    4.10. 利用されなくなったパッケージ

        4.10.1. ダミーパッケージ

5. jessie で知っておくべき問題点

    5.1. セキュリティサポートにおける制限事項

        5.1.1. ウェブブラウザにおけるセキュリティ更新の状態
        5.1.2. libv8 および Node.js 界隈のエコシステムに対するセキュ
            リティサポートの欠落
        5.1.3. MediaWiki へのセキュリティサポートの早期終了について

    5.2. OpenSSH サーバーのデフォルトが "PermitRootLogin
        without-password" になりました
    5.3. Puppet 2.7 / 3.7 の互換性
    5.4. PHP 5.6 へのアップグレードは挙動の変更があります
    5.5. Apache HTTPD 2.4 における互換性の無い変更
    5.6. Jessie での既存 init システムから新しい標準 init システムへ
        のアップグレードについて

        5.6.1. systemd 配下での起動時のマウント失敗に対する、より厳格
            な取り扱い
        5.6.2. 不要になった init スクリプトは完全に削除してください
        5.6.3. ローカルで変更を加えた init スクリプトは systemd に移
            植しなければいけない可能性があります
        5.6.4. plymouth は systemd 配下での起動時にブートプロンプトを
            必要とします
        5.6.5. logind と acpid 間でのやり取り
        5.6.6. systemd 配下でサポートされない crypttab 機能 (例:
            "keyscript=...")
        5.6.7. systemd: SIGKILL が早すぎる問題 [8.1 で修正済み]
        5.6.8. systemd: 'halt' コマンドの振る舞い

    5.7. Jessie で必要とされるカーネル設定オプション
    5.8. LXC ホストおよびコンテナのアップグレードについての検討

        5.8.1. Wheezy ホスト上で動作している LXC ゲストのアップグレー
            ド
        5.8.2. Jessie ホスト上で動作している LXC ゲストのアップグレー
            ド
        5.8.3. 追加情報について

    5.9. LUKS whirlpool で暗号化されたディスクの手動での移行作業 (非
        標準設定)
    5.10. GNOME デスクトップは基礎的な 3D グラフィック機能を必要とし
        ます
    5.11. GNOME デスクトップは AMD のプロプライエタリな FGLRX ドライ
        バーでは動作しません
    5.12. GNOME の標準キーボードショートカットでの変更
    5.13. base-passwd によって追加されているシステムユーザーの標準シ
        ェルの変更
    5.14. 新しい KDE E メール・カレンダー・連絡帳 (Kontact) に移行す
        る
    5.15. 複数のデスクトップ環境で仮想コンソール ("getty") が消失する
    5.16. "VGA signal out of range" / grub-pc で起動中、何も画面に表
        示されない
    5.17. crontab 中の cron ファイルのより厳重なチェック
    5.18. perl による読み込みできないモジュールパスの扱いの変更
    5.19. Ganeti クラスタをアップグレードする際の検討

        5.19.1. DRBD を使ったインスタンスを含む Ganeti クラスタのアッ
            プグレードに関する問題 [8.1 で修正済]
        5.19.2. Ganeti クラスタのアップグレードに関する一般的な注意事
            項

    5.20. Samba4 でのファイル実行についての新たな必要事項
    5.21. cryptsetup は BUSYBOX=n では起動できなくなる可能性がありま
        す
    5.22. Squid ウェブプロキシでの後方互換性のない変更

6. Debian に関するさらなる情報

    6.1. もっと読みたい
    6.2. 助けを求めるには

        6.2.1. メーリングリスト
        6.2.2. インターネットリレーチャット (IRC)

    6.3. バグを報告する
    6.4. Debian に貢献する

A. アップグレードの前に wheezy システムを調整する

    A.1. wheezy システムのアップグレード
    A.2. ソースリストのチェック
    A.3. 古く不要になった設定ファイルを削除する
    A.4. 古いロケールから UTF-8 へアップグレードする

B. リリースノートの貢献者たち
索引
用語集

第1章はじめに

    この文書は Debian ディストリビューションのユーザに、バージョン 8
    (コードネーム jessie) での大きな変更点を知らせるものです。

    このリリースノートでは、リリース 7 (コードネーム wheezy) から今回
    のリリースへの安全なアップグレード方法や、その際ユーザが遭遇する
    可能性がある既知の問題点についての情報をユーザに提供しています。

    この文書の最新版は、https://www.debian.org/releases/jessie/
    releasenotes (https://www.debian.org/releases/jessie/
    releasenotes) から取得できます。疑わしい場合は、最初のページにあ
    る文書の日付をチェックし、最新版を読んでいるかを確認してください
    。

    注意

    既知の問題点をすべてリストアップすることは不可能なので、問題点の
    予想される広がり具合と影響の大きさの両方に基づいて取捨選択してい
    ることに注意してください。

    Debian の 1 つ前のリリースからのアップグレード (この場合、wheezy
    からのアップグレード) のみがサポート・記述されていることに注意し
    てください。さらに古いリリースからのアップグレードが必要な場合は
    、過去のリリースノートを読み、まず wheezy へとアップグレードする
    ことをお勧めします。

1.1. この文書に関するバグを報告する

    私たちは、この文書で説明されているすべての異なるアップグレード手
    順を試し、また、ユーザが直面する可能性のある、すべての問題を予想
    しました。

    それにもかかわらず、この文書にバグ (不正確な情報や抜け落ちている
    情報) を見つけたと思う場合には、release-notes パッケージに対する
    バグ報告として、バグ追跡システム (https://bugs.debian.org/) に提
    出してください。あなたが発見した問題が既に報告されている場合に備
    え、まずは既存のバグ報告 (https://bugs.debian.org/release-notes)
    を確認してみると良いでしょう。もしこの文書にさらに内容を付加でき
    るのであれば、どうぞ遠慮なく既存のバグ報告へ情報を追加して下さい.

    私たちは、この文書のソースへのパッチを含めた報告を歓迎・推奨しま
    す。このドキュメントのソースの取得方法の記述については「この文書
    のソース」で、より詳細な情報を見つけることができるでしょう。

1.2. アップグレードについての報告をする

    wheezy から jessie へのアップグレードに関連するユーザからの情報は
    どんなものでも歓迎します。情報を共有するのを厭わない場合は、
    upgrade-reports パッケージに対するバグ報告として、アップグレード
    の結果を含めてバグ追跡システム (https://bugs.debian.org/) に提出
    してください。報告に添付ファイルを含める場合は、(gzip を使用して)
    圧縮するようお願いします。

    アップグレードについての報告を提出する際には、以下の情報を含めて
    ください。

      * アップグレード前後のパッケージデータベースの状態。/var/lib/
        dpkg/status にある dpkg の状態データベースと、/var/lib/apt/
        extended_states にある apt のパッケージ状態情報です。「あらゆ
        るデータや設定情報をバックアップする」で説明するように、アッ
        プグレードを実行する前にバックアップをとっておくべきですが、/
        var/lib/dpkg/status のバックアップは /var/backups にもありま
        す。

      * script を使用して作成したセッションのログ。「セッションの記録
        」で説明します。

      * /var/log/apt/term.log にある apt のログか、/var/log/aptitude
        にある aptitude のログ。

    注記

    バグ報告に情報を含める前に、慎重に扱うべき情報や機密情報がログに
    含まれていないかある程度時間をかけて検査し、ログから削除してくだ
    さい。なぜなら、バグ報告に含まれる情報は公開データベースで公表さ
    れるからです。

1.3. この文書のソース

    この文書のソースは DocBook XML 形式です。HTML 版は、docbook-xsl
    と xsltproc を使用して生成しています。PDF 版は、dblatex や
    xmlroff を使用して生成しています。リリースノートのソースは Debian
    ドキュメンテーションプロジェクト (Debian Documentation Project)
    の SVN リポジトリにあります。ウェブからウェブインターフェース
    (https://anonscm.debian.org/viewvc/ddp/manuals/trunk/
    release-notes/) を使って個々のファイルにアクセスでき、変更を参照
    できます。SVN へのアクセス方法に関してさらに詳しく知りたい場合は
    、Debian ドキュメンテーションプロジェクトの SVN 情報ページ
    (https://www.debian.org/doc/cvs) を参照してください。

第2章 Debian 8 の最新情報

    このトピックに関するより詳しい情報が Wiki (https://
    wiki.debian.org/NewInJessie) に載っています。

2.1. サポートするアーキテクチャ

    Debian 8 では 2 つの新しいアーキテクチャを導入します:

      * arm64, ARM 64 ビット移植版
   
      * ppc64el, POWER 64 ビットリトルエンディアン移植版

    Debian jessie で公式にサポートされているアーキテクチャは以下のと
    おりです。

      * 32 ビット PC ('i386') および 64 ビット PC ('amd64')

      * 64 ビット ARM ('arm64')

      * ARM EABI ('armel')

      * ARMv7 (EABI 浮動小数点ハードウェア ABI, 'armhf')
   
      * MIPS ('mips' (ビッグエンディアン) および 'mipsel' (リトルエン
        ディアン))

      * PowerPC ('powerpc')

      * 64 ビットリトルエンディアン PowerPC ('ppc64el')

      * IBM System z ('s390x')

    Debian 7 に含まれていた 3 つのアーキテクチャは jessie　ではリリー
    スされません。

      * Debian 7 がリリースされた時点でアナウンスされたように、32 ビ
        ット s390 移植版は終了して s390x に置き換えられました。

      * 加えて、IA-64 および Sparc 移植版が開発者のサポートが不十分な
        ため、このリリースから削除されました。Sparc は 2.1 (1999) か
        ら Debian でサポートされていたアーキテクチャであり、一方の
        ia64 は Debian 3.0 (2002) で導入されたものです。

   

    最後に、Debian 6.0 ならびに 7 にてテクノロジープレビューとして含
    められていた FreeBSD カーネルへの Debian 移植版である、
    kfreebsd-amd64 および kfreebsd-i386 はこのリリースの一部には含め
    られていません。

    移植状況の詳細や、お使いの移植版に特有の情報については、Debian の
    移植版に関するウェブページ (https://www.debian.org/ports/) で読む
    ことができます。

2.2. ディストリビューションの最新情報

    Debian のこの新しいリリースには、一つ前のリリースである wheezy に
    含まれていたよりさらに多くのソフトウェアが含まれています。このデ
    ィストリビューションには、12253 以上の新しいパッケージが含まれて
    おり、全体のパッケージ数は 43512 以上になりました。ディストリビュ
    ーション中のほとんどのソフトウェア、すなわち約 24573 ものソフトウ
    ェアパッケージ (これは wheezy のパッケージ全体の 66% にあたりま
    す) が更新されました。また、かなりの数のパッケージ (wheezy のパッ
    ケージの 14% にあたる 5441 以上) が、様々な理由でディストリビュー
    ションから取り除かれました。これらのパッケージは更新されることは
    なく、パッケージ管理用のフロントエンドでは 'obsolete' というマー
    クが付けられます。これについては「利用されなくなったパッケージ」
    を参照してください。

    Debian で今回も複数のデスクトップアプリケーションとデスクトップ環
    境をサポートしています。中でも GNOME 3.14、そして KDE 4.11、Xfce
    4.10、LXDE というデスクトップ環境を含んでいます。

    事務用アプリケーションもオフィス製品を含めてアップグレードされて
    います:

      * LibreOffice が 4.3 へアップグレードされました;

      * Calligra が 2.8 へアップグレードされました;

      * GNUcash が 2.6 へアップグレードされました;

      * GNUmeric が 1.12 へアップグレードされました;

      * Abiword が 3.0 へアップグレードされました。

    他のデスクトップアプリケーションの更新としては、Evolution 3.12　
    へのアップグレードが含まれます。

    またこのリリースには、特に挙げるなら、以下のソフトウェアの更新も
    含まれています:

    +----------------------------------------------------------------+
    |          パッケージ          |7 (wheezy) での |8 (jessie) での |
    |                              |   バージョン   |   バージョン   |
    |------------------------------+----------------+----------------|
    |Apache                        |2.2.22          |2.4.10          |
    |------------------------------+----------------+----------------|
    |BIND DNS サーバ               |9.8             |9.9             |
    |------------------------------+----------------+----------------|
    |Courier MTA                   |0.68            |0.73            |
    |------------------------------+----------------+----------------|
    |Dia                           |0.97.2          |0.97.3          |
    |------------------------------+----------------+----------------|
    |Exim 標準の電子メールサーバ   |4.80            |4.84            |
    |------------------------------+----------------+----------------|
    |GNU Compiler Collection (デフ |PC 版は 4.7、そ |4.9             |
    |ォルトのコンパイラ)           |の他は 4.6      |                |
    |------------------------------+----------------+----------------|
    |GNU C ライブラリ              |2.13            |2.19            |
    |------------------------------+----------------+----------------|
    |lighttpd                      |1.4.31          |1.4.35          |
    |------------------------------+----------------+----------------|
    |Linux カーネルイメージ        |3.2 シリーズ    |3.16 シリーズ   |
    |------------------------------+----------------+----------------|
    |OpenLDAP                      |2.4.31          |2.4.40          |
    |------------------------------+----------------+----------------|
    |OpenSSH                       |6.0p1           |6.7p1           |
    |------------------------------+----------------+----------------|
    |Perl                          |5.14            |5.20            |
    |------------------------------+----------------+----------------|
    |PHP                           |5.4             |5.6             |
    |------------------------------+----------------+----------------|
    |Postfix MTA                   |2.9             |2.11            |
    |------------------------------+----------------+----------------|
    |PostgreSQL                    |9.1             |9.4             |
    |------------------------------+----------------+----------------|
    |Python 3                      |3.2             |3.4             |
    |------------------------------+----------------+----------------|
    |Samba                         |3.6             |4.1             |
    +----------------------------------------------------------------+

2.2.1. CD、DVD、Blu-ray ディスク

    公式の Debian ディストリビューションは、現在は 9-10 枚のバイナリ 
    DVD または 75-85 枚のバイナリ CD (アーキテクチャによる) および 10
    枚のソース DVD または 59 枚のソース CD の形で提供されています。加
    えて、amd64 および i386 アーキテクチャのリリースのサブセットおよ
    びそのソースコードを収録した multi-arch DVD もあります。Debian は
    2 枚ずつの Blu-ray (BD) イメージの形でもリリースしされています。
    それぞれ amd64 そして i386 アーキテクチャで、もう 2 枚にはソース
    コードが収録されています。サイズ上の理由から、とても巨大なパッケ
    ージは CD のビルドからは外されています。これらのパッケージは DVD
    や BD のビルドにはより適しているので、こちらには含まれています。

2.2.2. GNOME デスクトップでの変更点

    バージョン 3.14 へのアップグレードによって、新しい GNOME デスクト
    ップにはたくさんの新しい機能と使い勝手の向上がもたらされています
    。

    GNOME シェルのデザインが更新されています。画面下のメッセージトレ
    イが大きくなり、使いやすくかつ誤って表示されにくくなりました。右
    上隅の新しいシステムステータス領域では、すべての有用な設定が同じ
    場所に収められるようになりました。

    スクリーンセーバーは "lock screen" によって置き換えられており、ユ
    ーザーが離席していても最小限の機能が使えるようになっています。例
    えば、音楽の一時停止、新しいメールの通知、画面輝度の変更がすべて
    パスワードの入力無しで可能になっています。Esc キーの入力あるいは
    パスワードの入力を開始するとログイン画面に戻ります。GNOME ディス
    プレイマネージャーは一貫して全く同じデザインを利用しています。

    Nautilus ファイルマネージャー・gedit テキストエディタ・evince ド
    キュメントビューワーなどを含む複数のアプリケーションは、よりコン
    パクトに見えるように、ウィンドウのタイトルバーとツールバーを統合
    したデザインに作られています。これによって、ユーザーが作業してい
    るドキュメントに対して、より多くの作業領域が与えられます。標準の
    ダイアログボックスについても同様の変更が進められています。

    複数の指での動作をベースとした直感的なゼスチュアを含む、タッチス
    クリーンサポートが完全に統合されました。GNOME は高解像度スクリー
    ン (HiDPI) もサポートするようになっており、微細なピクセル表示を最
    大限に活用して最も精細な画面表示を行います。

    GNOME は地理情報をサポートしており、滑らかに動作する地図表示・ナ
    ビアプリケーションを含んでいます。

    ユーザードキュメントはより完全なものとなり、新規ユーザー向けにビ
    デオチュートリアルが含められました。

    より詳細な情報については、GNOME 3.14 リリースノート (https://
    help.gnome.org/misc/release-notes/3.14/) で確認できます。

2.2.3. 新しい標準 init システム (systemd)

    Debian 7 で導入された systemd　が標準の init システムになりました
    。これによって、サービス監視・ログの取得・サービス管理機能が拡張
    されることになります。

    これは sysvinit をそのまま置き換えるように設計されており、既存の
    SysV 用の init スクリプトを使うようになっていますが、systemd パッ
    ケージは sysvinit と平行して安全にインストールし、init=/bin/
    systemd カーネルオプション経由で開始できます。systemd-sysv パッケ
    ージが/sbin/init の代替を提供します。

    詳細については Debian wiki (http://wiki.debian.org/systemd) を参
    照してください。

2.2.4. セキュリティ

    このリリースでは、レガシーな SSL プロトコル SSLv3 が無効にされて
    います。多くのシステム暗号化ライブラリは、サーバーやクライアント
    アプリケーション同様にこのプロトコルのサポートをしないようにコン
    パイルあるいは設定されています。

    Linux カーネルは、多重 symlink による攻撃を無効化するセキュリティ
    機構を導入しています。これは Debian の Linux カーネルでは標準で有
    効にされています。この機構によって攻撃できないようにされている /
    tmp に関連したバグは、セキュリティ脆弱性としては扱われません。カ
    スタムされた Linux カーネルを利用している場合は sysctl 設定を使っ
    て有効にする必要があります:

    echo 1 > /proc/sys/fs/protected_symlinks

    稀な例ですが、Debian リリース時に含まれているパッケージに対するセ
    キュリティサポートがディストリビューション全体のサポート終了より
    も前に終了せねばならない場合があります。Jessie は、パッケージに対
    するサポートが先んじて終了される必要がある場合に警告を飛ばす新し
    いパッケージ (debian-security-support) を提供しています。また、セ
    キュリティサポートの範囲が限られているパッケージについてはドキュ
    メントに記載するようにしています。従って、セキュリティを気にする
    必要があるシステムにはすべて debian-security-support パッケージを
    インストールすることを推奨します。

    Wheezy によって設定された既定路線に従って、より多くのパッケージが
    強化ビルドフラグを有効にしてビルドされています。また、stack
    protector はさらに強化を行うために stack-protector-strong に変更
    されています。強化ビルドフラグは、gcc ではデフォルトでは有効にさ
    れていないので、ローカルでビルドしたソフトウェアには自動的に使わ
    れないことに注意してください。

    このリリースでの新規事項は needrestart です。これはインストールさ
    れると、毎回の APT　アップグレードセッション後にチェックを実行し
    ます。システム上で動作しているサービスが、パッケージアップグレー
    ド時点での変更の恩恵を受けるために再起動する必要がある場合、これ
    らを再起動してくれます。ライブラリのセキュリティ更新が動作してい
    るサービスに確実に反映されるのを保証するため、needrestart をイン
    ストールすることをお勧めします。

2.2.5. MariaDB が MySQL を引き継ぎます

    古い MySQL 5.5 と並行して、Jessie では新たに MariaDB 10.0 を提供
    します。詳細については、Debian MySQL チームの wiki ページ (http:/
    /wiki.debian.org/Teams/MySQL) を参照してください。これらのうち、1
    つだけが Debian 9 には含まれることになるでしょう。

    MySQL 5.5 への開発元 (upstream) のサポートは 2018 年 12 月に終了
    し (そして Debian でのセキュリティサポートはこれに従う必要があり
    ます)、一方で MariaDB 10.0 は 2019 年 3 月まで開発元 (upstream)
    からのセキュリティサポートを受ける点に注意してください。

2.2.6. PHP アプリケーション

    Horde アプリケーションフレームワークは、Jessie では php-horde パ
    ッケージで利用可能です。

2.2.7. Debian Games Blend

    Debian Games チームは、ゲームに分類されるソフトウェアのインストー
    ルをシンプルにする、33 メタパッケージ (https://tracker.debian.org
    /pkg/debian-games) から成る Debian Games Blend (http://
    blends.debian.org/blends/) を提供できることを誇りに思います。多く
    の中から選ばれたゲームには、戦略ゲーム、シミュレーションゲーム、
    カードゲーム、プログラミングゲームなどがあります。Debian Games で
    は、デベロッパーに対してプログラム言語として C++ / Java / Perl /
    Python 3 で開発を行う際のお勧めソフトウェアを手早くインストールす
    る方法を提供しています。コンテンツデベロッパーは、
    games-content-dev パッケージ内でゲームアート作成に役立つツールが
    見つかることでしょう。プロジェクトのホームページでは、スクリーン
    ショットとさらなる情報、そして Debian's finest games (http://
    blends.debian.org/games/tasks/finest) を含むすべてのゲームについ
    ての簡略化した概要を提供しています。

2.2.8. Debian Med Blend からのニュース

    Debian Med チームは、生物学ならびに医薬分野のパッケージについて、
    再度その数をかなり増やしました。またそれだけではなく、テスト版
    (testing) の期間中で (パッケージビルド時に autopkgtest も利用し
    て) 品質も相当に向上させています。Debian Med Blend メタパッケージ
    バージョン 2.0 におけるこれらの拡張は、再試可能な結果を提供してく
    れる信頼できるソフトウェアを望む科学者らからの要望を反映したもの
    です。Debian Med tasks pages (http://blends.debian.org/med/tasks)
    を訪れて Debian におけるバイオ・医学関連ソフトウェアの全容を確認
    してみてください。

2.2.9. Debian Science Blend からのニュース

    Debian Science チームのたゆまぬ作業により、Debian のパッケージプ
    ールに新たな科学系アプリケーションが追加されたされただけではなく
    、いくつかのアプリケーション群によって、新たな科学分野についても
    カバーされるようになっています。Debian に含まれている科学系ソフト
    ウェアの全容を確認するには Debian Science tasks pages (http://
    blends.debian.org/science/tasks) を訪れてください。

2.2.10. Debian Geographical Information Systems (GIS) Blend からのニ
ュース

    Jessie の開発サイクルの間で UbuntuGIS から Debian GIS へ多くの変
    更がマージされました。UbuntuGIS および OSGeo-Live プロジェクトと
    の連携が改善され、その結果新しいパッケージと貢献者が加わりました
    。Debian に含まれている GIS ソフトウェアの全容を確認するには
    Debian GIS tasks pages (http://blends.debian.org/gis/tasks) を訪
    れてください。より詳細については Debian GIS のホームページ
    (https://wiki.debian.org/DebianGis) を参照してください。

2.2.11. Debian Java チームからのニュース

    Jessie は 799 のソースパッケージ (442 パッケージが更新され、
    Wheezy から 130 以上の新規パッケージを含む) が Java チーム
    (https://qa.debian.org/developer.php?login=
    pkg-java-maintainers@lists.alioth.debian.org) によってメンテナン
    スされることになります。注目すべき変更点は以下です:

      * OpenJDK 7 がデフォルトの Java ランタイムとしてサポートされま
        す。

      * OpenJDK 8 は jessie-backports から利用可能になります。

      * Tomcat 7 と Tomcat 8 がサポートされ、Tomcat 6 は削除されまし
        た。

      * VisualVM, Dynamic Code Evolution VM (openjdk-7-jre-dcevm),
        Gradle, eclipse-wtp-webtools, closure-compiler その他の新たな
        開発者用ツールが含まれています。

      * androidsdk-tools (https://packages.debian.org/source/jessie/
        androidsdk-tools) が含まれるようになりました。

第3章インストールシステム

    Debian Installer は公式の Debian インストールシステムです。このイ
    ンストーラーは、様々なインストール方法を提供しています。お使いの
    システムにインストールするのにどの方法が利用できるかは、使ってい
    るアーキテクチャに依存します。

    jessie 用のインストーラーのイメージは、インストールガイドとともに
    Debian のウェブサイト (https://www.debian.org/releases/jessie/
    debian-installer/) にあります。

    インストールガイドは、Debian 公式 CD/DVD セットの 1 枚目の CD/DVD
    内の、次の場所にも含まれています。

    /doc/install/manual/言語/index.html

    これまでに知られている問題点を列挙した debian-installer の正誤表
    (https://www.debian.org/releases/jessie/debian-installer/index#
    errata) も確認しておくとよいでしょう。

3.1. インストールシステムの最新情報

    Debian Installer は前回の Debian 7 での公式リリース以降も活発に開
    発されています。その結果、ハードウェアサポートが改良され、ワクワ
    クするような新機能がいくつか追加されました。

    このリリースノートでは、インストーラーにおける変更点のうち主要な
    ものだけをリストアップします。wheezy 以降になされた詳細な変更一覧
    の概要に興味がある場合は、Debian Installer のニュースの履歴
    (https://www.debian.org/devel/debian-installer/News/) で閲覧可能
    な、jessie 用ベータ版やリリース候補版 (RC) のリリースアナウンスを
    参照してください。

3.1.1. 主要な変更点

    削除された移植版

        「ia64」および「sparc」アーキテクチャがアーカイブから削除され
        たのに伴い、インストーラーでのサポートが廃止されました。

    新しい移植版

        インストーラーに「arm64」および「ppc64el」アーキテクチャのサ
        ポートが追加されました。

    新しい標準 init システム

        インストールシステムは、systemd を標準の init システムとして
        インストールするようになりました。

    デスクトップの選択

        デスクトップ環境がインストール中に tasksel を使って選択できる
        ようになりました。複数のデスクトップ環境を同時に選択できます
        が、デスクトップ環境のうちの幾つかの組み合わせについては、同
        時にはインストールできない可能性があります。

    起動パラメーターのために "--" が "---" で置き換えられます

        Linux カーネル側での変更に伴い、ユーザーランドのパラメーター
        からカーネルパラメーターを区切るのに、今まで利用されていた
        "--" セパレーターではなく "---" が使われるようになりました。

    新しい言語

        翻訳者による多大な努力によって、Debian は英語を含めて 75 の言
        語でインストールできるようになりました。これは wheezy より 1
        つの言語が追加されています。ほとんどの言語はテキスト版ユーザ
        インターフェイスでのインストールとグラフィカルユーザインター
        フェイスでのインストールの双方が可能になっていますが、いくつ
        かについてはグラフィカルユーザインターフェイスでのみ利用可能
        です。

        このリリースで追加された言語:

          + タジク語がグラフィカルインストーラーに追加されました。

        以下の言語は、非グラフィカル環境では文字セットが存在しないた
        め、グラフィカルインストーラーのみが選択できます: アムハラ語
        、ベンガル語、ゾンカ語、グジャラート語、ヒンディー語、グルジ
        ア語、カンナダ語、クメール語、マラヤーラム語、マラーティー語
        、ネパール語、パンジャブ語、タミール語、テルグ語、チベット語
        、ウィグル語。

    UEFI ブート

        Jessie インストーラーは、大量の UEFI ファームウェアに対するサ
        ポートを改善しているのに加え、64 ビットカーネルを利用した 32
        ビット UEFI ファームウェア上でのインストールもサポートしてい
        ます。

        これには UEFI セキュアブートは含まれないことに注意してくださ
        い。

3.1.2. 自動インストール

    前のセクションで述べたとおりインストーラに多数の変更が加えられた
    ので、インストーラによる、事前設定ファイルを使用した自動インスト
    ールのサポートにも変更がありました。つまり、wheezy のインストーラ
    ーで動いた既存の事前設定ファイルがあっても、修正を加えずにそれが
    新しいインストーラーで動くことは期待できません。

    事前設定の使用方法に関する豊富な文書を含んだ最新の付録が、インス
    トールガイド (https://www.debian.org/releases/jessie/
    installmanual) に追加されました。

第4章 Debian 7 (wheezy) からのアップグレード

4.1. アップグレードの準備

    アップグレードの前には、5章jessie で知っておくべき問題点に書かれ
    ている情報も読むことをお勧めします。この章に書かれている問題点は
    、アップグレードの過程と直接は関係がないかもしれませんが、それで
    もアップグレードを開始する前に知っておくべき重要事項である可能性
    があります。

4.1.1. あらゆるデータや設定情報をバックアップする

    システムをアップグレードする前に、完全なバックアップを取っておく
    よう強くお勧めします。少なくとも、失いたくないデータや設定情報だ
    けでもバックアップしておきましょう。アップグレードのツールや処理
    はきわめて信頼性の高いものですが、アップグレードの最中にハードウ
    ェア障害が起こると、システムに大きなダメージを与えることがありえ
    ます。

    バックアップしておくべき主な対象として、/etc、/var/lib/dpkg、/var
    /lib/apt/extended_states の中身、dpkg --get-selections "*" (引用
    符を忘れてはいけません) の出力などがあります。システムの管理に 
    aptitude を使っている場合は、/var/lib/aptitude/pkgstates もバック
    アップしておくと良いでしょう。

    アップグレードの過程自体は、/home ディレクトリ以下は一切変更しま
    せん。とはいえ、(Mozilla スイートの一部や、GNOME・KDE といったデ
    スクトップ環境のように) ユーザが初めて新しいバージョンのアプリケ
    ーションを起動するときに、既存のユーザ設定を新たなデフォルト値で
    上書きしてしまうものがあるのも事実です。万一に備えて、ユーザのホ
    ームディレクトリにある隠しファイルと隠しディレクトリ (いわゆる「
    ドットファイル」) をバックアップしておくのがよいでしょう。古い状
    態に戻したり、再度設定する場合に役立つはずです。ユーザにもこのこ
    とについて知らせておいてください。

    あらゆるパッケージのインストール処理はスーパーユーザ特権で実行さ
    れなければならないため、root としてログインするか su や sudo を使
    って、必要なアクセス権限を得てください。

    アップグレードにあたって事前に整えなければならない条件がいくつか
    あります。実際にアップグレードを実行する前にそれらを確認してくだ
    さい。

4.1.2. 事前にユーザに通知する

    アップグレードの前には、その予定をすべてのユーザに知らせるとよい
    でしょう。ただ、システムに ssh 接続などでアクセスしてきているユー
    ザが、アップグレードの最中にそうと気付くことはほとんどないはずで
    、また、作業を続行できるはずです。

    万一の対策をしたければ、アップグレードの前に /home パーティション
    をバックアップするか、アンマウントしてしまいましょう。

    jessie にアップグレードするときはおそらくカーネルをアップグレード
    しなければならないので、通常は再起動が必要です。通常、これはアッ
    プグレード完了後に実施します。

4.1.3. サービスのダウン期間の準備

    システムが提供しているサービスで、アップグレードに含まれるパッケ
    ージが関連するサービスがあるかもしれません。この場合、注意して欲
    しいのですが、アップグレード作業中に関連パッケージが置換・設定さ
    れる際、これらのサービスが停止します。この間、サービスは利用でき
    なくなります。

    これらのサービスに対する実際のダウン期間は、システム中でアップグ
    レードされるパッケージ数に応じて違いますし、このダウン期間には
    (もしあれば) システム管理者が各パッケージのアップグレードに対する
    設定の質問への回答に費やす時間も含まれます。アップグレード作業が
    放置されたままでいて、システムがアップグレード中に入力を必要とし
    た場合、非常に長期間サービスが利用ができなくなる可能性が非常に高
    いでしょう ^[1]

    アップグレードを行うシステムが、ユーザーやネットワークにとって最
    も重要なサービスを提供している場合^[2]、「システムの最小アップグ
    レード」で記述しているように最小限のシステムアップグレードを行い
    、次にカーネルのアップグレードと再起動をし、そしてもっとも重要な
    サービスに関連するパッケージをアップグレードします。これらのパッ
    ケージのアップグレードは、「システムのアップグレード」にある完全
    アップグレードより先に実施します。このようにすれば、これらの最重
    要サービスが動作しつづけ、そして完全アップグレード作業を行っても
    利用可能であることを保証し、サービスの停止時間を減らすことができ
    ます。

4.1.4. 復旧の準備

    Debian はシステムがブートできる状態を常に確保するように努めていま
    すが、アップグレード後のシステム再起動で問題に遭遇する可能性は常
    にあります。既知の潜在的な問題点の多くは、このリリースノートの本
    章と次章で述べられています。

    上述の理由により、システムが再起動に失敗したり、リモート管理され
    ているシステムならネットワーク接続の確立に失敗した場合に備え、復
    旧できる手立てを整えておくことが大切です。

    ssh 接続経由でリモートからアップグレードを行うのなら、リモートの
    シリアル端末からサーバにアクセスできるよう、必要な事前準備をして
    おくことをお勧めします。カーネルをアップグレードして再起動した後
    、ローカルコンソール経由でシステム設定を修正しなければならないこ
    とがあります。また、アップグレード中に誤ってシステムが再起動され
    た場合にも、ローカルコンソールを使って復旧する必要に迫られること
    があります。

    通常、お勧めしているのは jessie 用 Debian インストーラーのレスキ
    ューモードの利用です。インストーラーを使う利点は、多くのインスト
    ール手段の中からあなたの状況に最適なものを選べることにあります。
    より詳しい情報は、インストールガイド (https://www.debian.org/
    releases/jessie/installmanual) の第 8 章にある「壊れたシステムの
    復旧」セクションや、Debian インストーラー FAQ (https://
    wiki.debian.org/DebianInstaller/FAQ) を参照してください。

    古いカーネルでの再起動に失敗するなら、システムを起動してアクセス
    ・修復するための代替手段が必要となるでしょう。1 つのオプションと
    しては、特別な復旧イメージや Linux ライブ CD を使うことがあります
    。これらを使って起動した後は、ルートファイルシステムをマウントし
    、chroot でその中に入って問題点を調査・解決できるはずです。

4.1.4.1. initrd を使った起動中のデバッグシェル

    initramfs-tools パッケージは生成した initrd にデバッグシェルを収
    録します^[3]。例えば、initrd がルートファイルシステムをマウントで
    きなければ、デバッグシェル内に移るでしょう。このデバッグシェルは
    、問題の追跡、そしておそらくは修正の手助けとなる基本的なコマンド
    を備えています。

    チェックすべき基本的事項としては、次のようなものがあります。/dev
    内に適切なデバイスファイルが存在するか、どのモジュールがロードさ
    れているか (cat /proc/modules)、dmesg の出力にドライバのロード失
    敗のエラーが出ていないか、など。dmesg の出力はまた、どのデバイス
    ファイルがどのディスクに割り当てられているのかも示してくれます。
    ルートファイルシステムが期待通りのデバイス上にあるかを確認するた
    めに、echo $ROOT の出力もチェックすべきでしょう。

    問題点を何とか解決できたなら、exit とタイプすることでデバッグシェ
    ルを終了させ、起動プロセスを失敗した時点から継続できます。もちろ
    ん次回の起動時に再び失敗することが無いよう、根本的な問題を修正し
    て initrd を再生成する必要があるでしょう。

4.1.4.2. systemd を使った起動中のデバッグシェル

    起動が systemd において失敗する場合、カーネルコマンドラインを変更
    することでデバッグ用の root シェルを追加できます。基本的な起動は
    成功するがサービスが起動に失敗する場合は、カーネルパラメーターに
    systemd.unit=rescue.target を追加すると解決の役に立つかもしれませ
    ん。

    それ以外の場合、カーネルパラメーターとして systemd.unit=
    emergency.target を指定することによって、可能な限り早い段階で
    root シェルが使えるようになります。ですが、これは root ファイルシ
    ステムを読み書き可能な権限でマウントする前に実行されます。以下を
    手動で実行する必要があるでしょう:

    mount -o remount,rw /

    systemd 環境下で起動がおかしいのをデバッグする詳細な情報について
    は、Diagnosing Boot Problems (http://freedesktop.org/wiki/
    Software/systemd/Debugging/) という記事で参照できます。

    それでも失敗する場合、以前の sysvinit システム経由で起動すること
    ができるかもしれません。これには sysvinit がまだインストールされ
    ていて initramfs に /lib/sysvinit/init が含まれている必要がありま
    す。これらの必要条件を満たしている場合、カーネルコマンドラインに
    init=/lib/sysvinit/init を追加すれば sysvinit バイナリを使って起
    動するでしょう。

4.1.5. アップグレード用の安全な環境の準備

    ディストリビューションのアップグレードは、ローカルのテキストモー
    ド仮想コンソール (あるいは直接接続されたシリアル端末) から行うか
    、リモートなら ssh 接続経由で行いましょう。

    重要

    (tinc のような) VPN サービスを使っている場合、アップグレード作業
    中に使えなくなるかもしれません。「サービスのダウン期間の準備」を
    参照してください。

    リモートでのアップグレード時にさらなる安全マージンを得るため、
    screen プログラムが提供する仮想コンソール内でアップグレード作業を
    行うことを提案します。このプログラムは安全な再接続を可能にし、リ
    モート接続プロセスが切断された場合でもアップグレード作業が中断し
    ないようにしてくれます。

    重要

    telnet、rlogin、rsh を用いてアップグレードをしてはいけません。ア
    ップグレードするマシンの xdm、gdm、kdm などが管理している X セッ
    ションからのアップグレードも行うべきではありません。これらのサー
    ビスはアップグレードの最中に切断されてしまう可能性が高く、そうな
    るとアップグレード途中のシステムへの接続が不可能になってしまうか
    らです。GNOME アプリケーションの update-manager の利用は、このツ
    ールはデスクトップのセッションが利用可能であるのが前提であるため
    、新しいリリースへのアップグレードには全く勧められません。

4.2. システムの状態をチェックする

    この章で述べられているアップグレード手順は、サードパーティ製のパ
    ッケージが無い「純粋」な wheezy システムからのアップグレード用で
    す。アップグレードプロセスにおいて最大限の信頼性を確保するために
    、アップグレード開始前にシステムからサードパーティ製パッケージを
    削除しておいた方が良いでしょう。

    7 (wheezy) より古い Debian のリリースバージョンからの直接のアップ
    グレードはサポートされていません。7 へのアップグレードは、まず
    Debian 7 のリリースノート (http://www.debian.org/releases/wheezy/
    releasenotes) の指示に従ってください。

    またこの手順は、システムが wheezy の最新ポイントリリースにアップ
    デート済みであるものと想定しています。そうではなかったり、アップ
    グレード済みかどうか不明なら、「wheezy システムのアップグレード」
    内の指示に従ってください。

4.2.1. パッケージマネージャにおいて中断しているアクションの確認

    パッケージをインストールするのに aptitude の代わりに apt-get を使
    用すると、時として、aptitude がそのパッケージを「使われていない」
    とみなし、削除対象とすることがあります。一般的には、アップグレー
    ドを先に進める前に、システムが完全に最新かつ「クリーン」な状態と
    なっているかを確認するべきです。

    そのため、パッケージマネージャ aptitude において中断しているアク
    ションがないか確認すべきでしょう。パッケージマネージャにおいて、
    あるパッケージが削除あるいは更新の対象となっているなら、アップグ
    レード手順に好ましくない影響を与えるかもしれません。パッケージマ
    ネージャにおけるアクションの修正は、sources.list に stable や 
    jessie ではなく、wheezy が指定されている段階でのみ可能なことに注
    意してください。「ソースリストのチェック」も参照してください。

    この確認を行うには、aptitude を「ビジュアルモード」で起動して g (
    「Go」) を押してください。何らかのアクションが表示されたなら、そ
    の内容を確認して、修正するかあるいは提案されたアクションを実行す
    べきです。いかなるアクションの提案もない場合は、「インストール・
    削除・更新予定のパッケージがありません」というメッセージを表示し
    ます。

4.2.2. APT の pin 機能を無効にする

    特定のパッケージを安定版以外のディストリビューション (テスト版な
    ど) からインストールするように APT を設定している場合、そのパッケ
    ージが新しい安定版リリース内のバージョンにアップグレードできるよ
    うに、(/etc/apt/preferences および /etc/apt/preferences.d/ 内に保
    存されている) APT の pin 設定を変更しなければならないかもしれませ
    ん。APT の pin 機能に関する、より詳しい情報は、apt_preferences(5)
    にあります。

4.2.3. パッケージの状態をチェックする

    アップグレードの方法に関係なく、まず全パッケージの状態を調べ、全
    パッケージがアップグレード可能な状態にあるのを確認することをお勧
    めします。次のコマンドは、インストールが未完了のパッケージ
    (Half-Installed) や設定に失敗したパッケージ (Failed-Config)、何ら
    かのエラー状態にあるパッケージを表示します:

    # dpkg --audit

    aptitude や次のようなコマンドを使ってシステムの全パッケージの状態
    を検査することもできます。

    # dpkg -l | pager

    または

    # dpkg --get-selections "*" > ~/curr-pkgs.txt

    アップグレード前に、あらゆる hold 状態を解除しておいたほうがよい
    でしょう。アップグレードに不可欠なパッケージが hold 状態にある場
    合、アップグレードに失敗します。

    hold 状態にあるパッケージを記録するのに、aptitude は apt-get や 
    dselect とは異なる手法を用いることに注意してください。aptitude で
    hold 状態にあるパッケージを確認するには、以下のように実行します。

    # aptitude search "~ahold"

    apt-get でどのパッケージが hold 状態にあるのかを調べたければ、以
    下のように実行してください。

    # dpkg --get-selections | grep 'hold$'

    パッケージをローカルで変更・再コンパイルしており、パッケージの名
    前を変えたりバージョン番号に epoch フィールドを追加していないなら
    、アップグレードしないよう hold 状態にしておかなければなりません
    。

    apt-get でパッケージを「hold」状態に変更するには、以下のように実
    行してください。

    # echo パッケージ名 hold | dpkg --set-selections

    「hold」状態を解除するには hold の代わりに install を使用してくだ
    さい。

    修正が必要なことがあるなら、「ソースリストのチェック」で説明する
    ように sources.list が wheezy を指定したままにしておくべきです。

4.2.4. proposed-updates セクション

    /etc/apt/sources.list ファイルに proposed-updates セクションを含
    めている場合は、システムのアップグレードを試みる前に、それらのセ
    クションをファイルから削除してください。これは、衝突の可能性を減
    らすための予防策です。

4.2.5. 非公式なソース

    システムに Debian 以外のパッケージがインストールされている場合、
    依存関係の衝突のためアップグレード中に削除されるかもしれないこと
    に注意してください。当該パッケージが /etc/apt/sources.list に
    Debian 以外のパッケージアーカイブを追加することでインストールされ
    たのなら、そのアーカイブが jessie 用にコンパイルされたパッケージ
    も提供しているかをチェックし、Debian パッケージ用のソース行と一緒
    にそのソース行も適切に修正してください。

    非公式にバックポートされた「より新しい」バージョンのパッケージが
    存在している wheezy がインストールされている Debian システムを使
    っているユーザもいることでしょう。そのようなパッケージはファイル
    が競合する可能性があるので、まず間違いなくアップグレード中に問題
    を起こします^[4]。「アップグレード中の注意点」には、もしそのよう
    な競合が起きた場合にどうやって対処するのか、という情報があります
    。

4.3. APT の取得先 (ソース) の準備

    アップグレードを始める前に、apt の設定ファイル /etc/apt/
    sources.list を編集して、パッケージ一覧の取得先を設定する必要があ
    ります。

    apt は、あらゆる「deb」行を通して見つかったすべてのパッケージを見
    比べ、最も大きなバージョン番号のパッケージをインストールします。
    同じパッケージが取得可能な場合は、ファイルで最初に現れた行を優先
    します (したがって、複数のミラーを指定する場合は、最初にローカル
    のハードディスクを、次に CD-ROM を、最後に HTTP/FTP ミラーを指定
    するといいでしょう)。

    リリースを指定するのに、コードネーム (wheezy や jessie) と状態名
    (oldstable、stable、testing、unstable) のどちらもよく使用されます
    。コードネームによる指定には、新しいリリースが出たときに驚かずに
    済むという利点があるため、ここではコードネームを使用しています。
    当然ですが、コードネームを使用している場合は自分でリリースアナウ
    ンスに注意を払わなければいけません。代わりに状態名を使用している
    場合は、リリースが行われた直後に、パッケージが大量に更新可能にな
    ったことに気づくでしょう。

4.3.1. APT のインターネットソースの追加

    デフォルトの設定では、メインの Debian インターネットサーバを使っ
    てインストールするようになっています。ですが、/etc/apt/
    sources.list を編集して、他のミラー (できればネットワーク的に最も
    近いミラー) を使うようにするほうがよいでしょう。

    Debian の HTTP/FTP ミラーのアドレスは、https://www.debian.org/
    distrib/ftplist (https://www.debian.org/distrib/ftplist) にありま
    す (「Debian ミラーサイト一覧」のセクションを参照してください)。
    一般には HTTP ミラーのほうが FTP ミラーよりも高速です。

    例えば、一番近くにある Debian ミラーが http://mirrors.kernel.org/
    だったとしましょう。このミラーをウェブブラウザや FTP プログラムで
    見てみると、主なディレクトリが以下のような構成になっていることが
    わかります。

    http://mirrors.kernel.org/debian/dists/jessie/main/binary-amd64/...
    http://mirrors.kernel.org/debian/dists/jessie/contrib/binary-amd64/...

    このミラーを apt で使うには、次の行を sources.list ファイルに追加
    します。

    deb http://mirrors.kernel.org/debian jessie main contrib

    「dists」を書かなくても、暗黙のうちに追加します。リリース名の後の
    各引数は、パスの末尾につけて、複数のディレクトリに展開するのに用
    います。

    新しいソースを追加した後、sources.list 内の既存の「deb」行の先頭
    に、ハッシュ記号 (#) を追加して無効にしてください。

4.3.2. APT のローカルミラーソースの追加

    HTTP や FTP のパッケージミラーを使うのではなく、ローカルディスク
    (おそらくは NFS マウントされたもの) にあるミラーを使うよう、/etc/
    apt/sources.list を変更したいことがあるかもしれません。

    例えばパッケージのミラーが /var/ftp/debian/ にあり、主なディレク
    トリの配置が次のようになっているとします。

    /var/ftp/debian/dists/jessie/main/binary-amd64/...
    /var/ftp/debian/dists/jessie/contrib/binary-amd64/...

    これを apt で使うには、次の行を sources.list ファイルに追加します
    。

    deb file:/var/ftp/debian jessie main contrib

    「dists」を書かなくても、暗黙のうちに追加します。リリース名の後の
    各引数は、パスの末尾につけて、複数のディレクトリに展開するのに用
    います。

    新しいソースを追加した後、sources.list 内の既存の「deb」行の先頭
    に、ハッシュ記号 (#) を追加して無効にしてください。

4.3.3. APT の光学メディアソースの追加

    CD (や DVD、Blu-ray Disc) だけでインストールをしたい場合は、/etc/
    apt/sources.list 内の「deb」行の先頭にハッシュ記号 (#) を置き、そ
    れらを無効にしてください。

    CD-ROM ドライブをマウントポイント /media/cdrom にマウントできるよ
    うにしている行が /etc/fstab にあるかどうかを確認してください。例
    えば /dev/sr0 が CD-ROM ドライブなら、/etc/fstab には次のような行
    が必要です。

    /dev/sr0 /media/cdrom auto noauto,ro 0 0

    第 4 フィールドの noauto,ro の単語の間には、スペースを入れてはい
    けません。

    これが正しく機能しているか調べるには、CD を挿入して以下を実行して
    みてください。

    # mount /media/cdrom    # マウントポイントに CD をマウントします
    # ls -alF /media/cdrom  # CD のルートディレクトリを表示します
    # umount /media/cdrom   # CD をアンマウントします

    問題がなければ

    # apt-cdrom add

    を、Debian Binary CD-ROM それぞれに対して実行してください。各 CD
    に関するデータが APT のデータベースに追加されます。

4.4. パッケージのアップグレード

    Debian の前回のリリースからのお勧めのアップグレード方法は、パッケ
    ージ管理ツール apt-get を用いる方法です。以前のリリースでは、この
    作業には aptitude が推奨されていましたが、apt-get の最近のバージ
    ョンでは同等の機能が提供されており、さらにより高い整合性により望
    ましいアップグレード結果をもたらします。

    まず、必要なすべてのパーティション (特にルートパーティションと /
    usr パーティション) を read-write モードでマウントするのを忘れず
    に行いましょう。それには以下のようなコマンドを使います。

    # mount -o remount,rw /マウントポイント

    次に、(/etc/apt/sources.list 内の) APT ソースのエントリが「jessie
    」と「stable」のいずれか一方を指定していることを念入りにチェック
    してください。wheezy を指し示すソースエントリが含まれてはいけませ
    ん。

    +--------------------------------------------------+
    |注記                                              |
    |                                                  |
    |CD-ROM のソース行は「unstable」を指定していること |
    |がよくあります。これは混乱の元かもしれませんが、変|
    |更すべきではありません。                          |
    +--------------------------------------------------+

4.4.1. セッションの記録

    ここで強くお勧めしたいのですが、/usr/bin/script プログラムを使っ
    て、このアップグレードセッションの記録を取るようにしましょう。こ
    うすれば、何らかの問題が生じたときに何が起こったかを記録しておく
    ことができ、必要に応じてバグ報告に正確な情報を含めることができま
    す。記録を開始するには次のように入力します。

    # script -t 2>~/upgrade-jessie手順.time -a ~/upgrade-jessie手順.script

    typescript を再度実行する必要がある場合 (例: システムを再起動する
    必要がある場合) は、どのアップグレード手順のログを取っているのか
    を示すため、別の手順番号を使ってください。typescript ファイルは /
    tmp や /var/tmp のような一時ディレクトリには置かないでください
    (これらのディレクトリ内のファイルはアップグレードや再起動の際に削
    除されることがありますから)。

    また、typescript ファイルに記録することで、スクロールしてスクリー
    ンから消えた情報をもう一度見ることができるようにもなります。シス
    テムのコンソールの前に居る場合は、(Alt+F2 を使って) 2 番の仮想コ
    ンソールに切り替えて、ログインしてから less -R ~root/
    upgrade-jessie.script と実行すれば当該ファイルを見ることができま
    す。

    アップグレード完了後に script を停止するには、プロンプトから exit
    と入力してください。

    script に -t スイッチをつけておいた場合は、以下のように 
    scriptreplay プログラムでセッション全体をリプレイできます。

    # scriptreplay ~/upgrade-jessie.time ~/upgrade-jessie.script

4.4.2. パッケージリストの更新

    まず、新しいリリースで利用可能なパッケージの一覧を取得する必要が
    あります。そのためには以下のコマンドを実行してください。

    # apt-get update

4.4.3. アップグレードするのに十分な領域があることを確認する

    システムアップグレードの前には、「システムのアップグレード」で説
    明するシステム全体のアップグレードを開始するときに、十分なハード
    ディスク領域があるかどうかを確認してください。まず、ネットワーク
    経由で取得してインストールする必要があるパッケージは、すべて /var
    /cache/apt/archives (およびダウンロード中には partial/ サブディレ
    クトリ) に保存されます。したがって、システムにインストールされる
    パッケージをダウンロードして一時的に保存できるよう、/var/ を保持
    しているファイルシステムパーティションに十分な空き領域があること
    を確認しなければなりません。ダウンロード後にはおそらく、アップグ
    レードされるパッケージ (これらには、より大きなバイナリやより多く
    のデータが含まれている可能性があります) と、アップグレードに伴っ
    て依存関係に引きずられて新たにインストールされるパッケージの両方
    のインストールのために、他のファイルシステムパーティションにさら
    に領域が必要になるでしょう。システムに十分な空き領域がない場合、
    アップグレードが不完全な状態で終わり、復旧が困難になる可能性があ
    ります。

    apt-get で、インストールに必要なディスク領域の詳細な情報が表示で
    きます。アップグレードを実行する前に、次のように実行して必要な領
    域の推定値を見ることができます。

    # apt-get -o APT::Get::Trivial-Only=true dist-upgrade
    [ ... ]
    アップグレード: XXX 個、新規インストール: XXX 個、削除: XXX 個、保留: XXX 個。
    xx.x MB のアーカイブを取得する必要があります。
    この操作後に追加で AAA MB のディスク容量が消費されます。

    注記

    アップグレード手順の初めにこのコマンドを実行すると、以降のセクシ
    ョンで説明するような理由でエラーが発生する可能性があります。その
    場合、このコマンドを実行してディスク領域の推定値を見る前に、まず
    「システムの最小アップグレード」で説明しているシステムの最小アッ
    プグレードを行う必要があります。

    アップグレードをするのに十分な領域がない場合は、apt-get が以下の
    ような警告メッセージを出します。

    エラー: /var/cache/apt/archives/ に充分な空きスペースがありません。

    この場合、事前に領域を解放するのを忘れないようにしてください。以
    下のことを実行するとよいでしょう。

      * インストールのために、以前 (/var/cache/apt/archives に) ダウンロ
        ードしたパッケージを削除する。apt-get clean を実行してパッケージ
        キャッシュを一掃すると、以前ダウンロードしたパッケージファイルを
        すべて削除できます。

      * 忘れ去られたパッケージを削除する。さらに、wheezy で手作業でパッケ
        ージをインストールするのに aptitude や apt-getを使っていたのなら
        、手作業でインストールされたパッケージの記録が取られています。依
        存関係のみによって引きずられてインストールされたパッケージに対し
        て、依存元パッケージが削除されたためにもう不要となった場合に、余
        分だというマークをつけることができるでしょう。手作業でインストー
        ルしたパッケージには削除されるマークをつけません。自動的にインス
        トールされたがもはや使われていないパッケージを削除するには、以下
        を実行してください:

        # apt-get autoremove

        余分なパッケージを見つけるのに、deborphan や debfoster、cruft も
        使えます。これらのツールが表示したパッケージをやみくもに削除しな
        いでください。特に、誤検出しやすい非デフォルトの凶暴なオプション
        を使っている場合はなおさらです。実際に削除する前に、削除を提案さ
        れたパッケージ (の内容やサイズ、説明など) を手作業で調べなおすこ
        とを強くお勧めします。

      * 多くの容量を占めていて現在必要のないパッケージを削除する (アップ
        グレード後にいつでもインストールし直せます)。popularity-contest
        をインストールしていれば、popcon-largest-unused を使うことにより
        、容量の多くを占めていて使うことのないパッケージの一覧が得られま
        す。dpigs (debian-goodies パッケージに収録) や wajig (wajig size
        を実行) により、ディスク容量を消費するだけのパッケージを検索する
        ことができます。こういった情報は aptitude を使って検索することも
        できます。aptitude をビジュアルモードで起動します。表示 → 平坦な
        パッケージ一覧を新規に作成を実行し、l を押して、~i と入力します。
        S を押して ~installsize と入力します。すると、作業しやすい一覧が
        得られます。

      * 翻訳や地域化用ファイルが不要なら、それらをシステムから削除する。
        localepurge パッケージをインストールして設定すれば、選んだ少数の
        ロケールのみがシステムに残るようにすることが可能です。これによっ
        て、/usr/share/locale の消費するディスク領域を減らせるでしょう。

      * /var/log/ の下にあるシステムログを、一時的に他のシステムに移動す
        るか、永久に削除する。

      * 仮設の /var/cache/apt/archives を使用する。すなわち、別のファイル
        システム (USB ストレージデバイス、一時的なハードディスク、既に使
        用されているファイルシステムなど) を仮設のキャッシュディレクトリ
        として拝借することができます。

        +-----------------------------------------------------+
        |注記                                                 |
        |                                                     |
        |アップグレード中にネットワーク接続が途切れる可能性が |
        |あるので、NFS マウントは使用しないでください。       |
        +-----------------------------------------------------+

        以下は、/media/usbkey にマウントされた USB ドライブがある場合を例
        とします。

         1. 今までに、インストールのためにダウンロードされたパッケージを
            削除します。

            # apt-get clean

         2. ディレクトリ /var/cache/apt/archives を、USB ドライブにコピー
            します。

            # cp -ax /var/cache/apt/archives /media/usbkey/

         3. 現在のキャッシュディレクトリに、仮のキャッシュディレクトリを
            マウントします。

            # mount --bind /media/usbkey/archives /var/cache/apt/archives

         4. アップグレード後に、元々の /var/cache/apt/archives ディレクト
            リを復活させます。

            # umount /media/usbkey/archives

         5. 残っている /media/usbkey/archives を削除します。

        仮設のキャッシュディレクトリは、システムにマウントされているファ
        イルシステムであれば何にでも作成できます。

      * システムの最小アップグレードを行う (「システムの最小アップグレー
        ド」参照)、あるいは完全アップグレードにしたがって、システムの部分
        的なアップグレードを行う。これによって、システムを部分的にアップ
        グレードが可能になり、完全アップグレード前にパッケージキャッシュ
        の削除ができます。

    パッケージを安全に削除するための注意として、「ソースリストのチェ
    ック」で説明するように、sources.list が wheezy を指し示すよう設定
    を戻しておくことが望ましいです。

4.4.4. システムの最小アップグレード

    完全アップグレード (以下に記述しています) を直接行った場合、残し
    ておきたいパッケージが大量に削除されてしまうことが時折あります。
    そのため、まずはこれらの競合状態を打開するための最小アップグレー
    ドを行い、その上で「システムのアップグレード」にあるような完全な
    dist-upgrade を行う、という 2 段階のアップグレード過程を踏むこと
    をお勧めします。

    これをまず行うには、以下のコマンドを実行してください。

    # apt-get upgrade

    注記

    以前のリリースの一部では、アップグレード作業に aptitude の利用を
    推奨していました。このツールは wheezy から jessie へのアップグレ
    ードには推奨されません。

    このコマンドには、アップグレードしても他のパッケージをインストー
    ル・削除する必要がないパッケージだけをアップグレードする、という
    効果があります。

    システムの容量が少なく、容量による制約のため完全アップグレードが
    実行できない場合にも、システムの最小アップグレードは有用です。

    apt-listchanges パッケージがインストールされていれば、(デフォルト
    設定で) アップグレードされるパッケージについての重要な情報をペー
    ジャで表示します。読み終わったら q を押してページャを終了し、アッ
    プグレードを続けてください。

4.4.5. システムのアップグレード

    これまでの手順を実行し終わったら、アップグレードの主要な部分を続
    ける準備ができています。以下のコマンドを実行してください。

    # apt-get dist-upgrade

    注記

    以前のリリースの一部では、アップグレード作業に aptitude の利用を
    推奨していました。このツールは wheezy から jessie へのアップグレ
    ードには推奨されません。

    これによってシステムの完全なアップグレードが行われ、すべてのパッ
    ケージの最新版がインストールされ、リリース間で発生しうるパッケー
    ジの依存関係の変化すべてが解決されます。必要に応じて、新しいパッ
    ケージ (通常は、新しいバージョンのライブラリや、名前の変わったパ
    ッケージ) がインストールされたり、衝突した古いパッケージが削除さ
    れたりもします。

    CD-ROM (または DVD) のセットからアップグレードする場合には、アッ
    プグレードの最中に、特定の CD を入れるよう何回か指示されることに
    なります。同じ CD を複数回入れなければならないかもしれません。こ
    れは、相互に依存しているパッケージが別々の CD に分散しているため
    です。

    現在インストールされているパッケージを新しいバージョンへとアップ
    グレードする際に、他のパッケージのインストール状態を変更しなけれ
    ばならないような場合には、そのパッケージは現在のバージョンのまま
    になります (「固定されている」と表示されます)。この状態は、
    aptitude でこれらのパッケージをインストール対象として選択するか、
    または apt-get install パッケージ名を実行してみると、解決できます
    。

4.5. アップグレード中の注意点

    以下の章では、jessie へのアップグレードの最中に現れるかもしれない
    既知の問題を記述しています

4.5.1. 「即時設定は動作しません」で dist-upgrade が失敗する

    apt-get dist-upgrade の途中でパッケージをダウンロードした後に失敗とな
    り、

    「パッケージ」の即時設定は動作しません。詳細については man 5 apt.conf の APT::Immediate-Configure の項を参照してください。

    と表示することがあります。これが起きた場合は、代わりに apt-get
    dist-upgrade -o APT::Immediate-Configure=0 を実行することでアップ
    グレードを進められるはずです。

    この問題の暫定的な別の対処の可能性として、wheezy と jessie の両方
    のソースを一時的に sources.list に追加して apt-get update を実行
    する方法があります。

4.5.2. 予期されるパッケージの削除

    jessie へのアップグレード作業では、システム中のパッケージ削除を尋
    ねてくるかもしれません。実際のパッケージ一覧は、インストールして
    あるパッケージの構成によって異なってくるでしょう。このリリースノ
    ートでは、どのような方法をとるべきかに関する一般的なアドバイスを
    します。しかし、確信がもてない場合は、それぞれの方法でアップグレ
    ードを先に進める前に、どのパッケージを削除するよう提案されている
    のか、きちんと調べることをお勧めします。jessie で時代遅れ
    (obsoleted) となったパッケージの詳細については、「利用されなくな
    ったパッケージ」を参照してください

4.5.3. 衝突 (Conflicts) あるいは事前依存 (Pre-Depends) のループ

    場合によっては衝突や事前依存のループのために、APT の
    APT::Force-LoopBreak オプションを有効にして、必須パッケージを一時
    的に削除しなければならないかもしれません。その場合 apt-get はこの
    ことを警告してアップグレードを中断します。apt-get のコマンドライ
    ンにオプション -o APT::Force-LoopBreak=1 を指定すれば、この状態を
    回避できます。

    システムの依存関係の構造があまりに問題だらけで、手動での介入が必
    要となることもあります。通常、手動での介入とは、apt-get を用いる
    か、あるいは

    # dpkg --remove パッケージ名

    で問題の原因となるパッケージを消す作業になります。または次の方法
    を用いてもよいかもしれません。

    # apt-get -f install
    # dpkg --configure --pending

    極端な場合には、コマンドラインから次のように入力して、再インスト
    ールしなければならないかもしれません。

    # dpkg --install /path/to/パッケージ名.deb

4.5.4. ファイルの衝突

    「純粋」な wheezy システムからのアップグレードでは、ファイルの衝
    突は起こらないはずですが、非公式のバックポートパッケージをインス
    トールしているなら起こるかもしれません。ファイルの競合が起こると
    、次のようなエラーになります:

    (<package-foo-file> から) <package-foo> を展開しています...
    dpkg: <package-foo> の処理中にエラーが発生しました (--install):
     `<some-file-name>' を上書きしようとしています。これはパッケージ <package-bar>
     にも含まれています
    dpkg-deb: サブプロセス paste がシグナル (Broken pipe) によって強制終了しました
     以下のパッケージの処理中にエラーが発生しました:
     <package-foo>

    ファイルの衝突を解消するには、エラーメッセージの最後の行に表示さ
    れたパッケージを強制的に削除します:

    # dpkg -r --force-depends パッケージ名

    問題が修正できたら、先程説明した apt-get のコマンドを再度入力すれ
    ば、アップグレードを再開できます。

4.5.5. 設定の変更

    アップグレードの最中に、いくつかのパッケージの設定・再設定に関す
    る質問が表示されます。/etc/init.d ディレクトリと /etc/
    manpath.config ファイルに関しては、パッケージメンテナのバージョン
    に置き換えるようにしてください。システムの整合性を保つためには「
    yes」と答えることが必要になります。古いバージョンも .dpkg-old と
    いう拡張子をつけられて保存されていますので、戻すのはいつでもでき
    ます。

    どうすればよいかわからなくなったら、そのパッケージやファイルの名
    前を書き留めておいて、その問題解決は後回しにしましょう。
    typescript ファイルを検索すれば、アップグレードの最中に画面に表示
    された情報をもう一度見ることもできます。

4.5.6. コンソール接続へセッションの変更

    システムのローカルコンソールを使ってアップグレードを実行している
    場合、アップグレードの最中に何回かコンソールが別の画面へ移動して
    しまい、アップグレード作業が見えなくなることに気づくかもしれませ
    ん。例えば、デスクトップシステムでディスプレイマネージャが再起動
    した際に起こります。

    仮想ターミナル 1 に戻るには (グラフィカルの起動画面の場合は) Ctrl
    +Alt+F1、あるいは (ローカルのテキストモードコンソールの場合には) 
    Alt+F1を使う必要があります。F1 は、アップグレードが実行されている
    仮想ターミナルの番号と同じ番号のファンクションキーと置き換えてく
    ださい。異なったテキストモードのターミナル間で切り替えを行うには
    、Alt+左矢印か Alt+右矢印も使えます。

4.5.7. 特定のパッケージに対する特別な注意

    ほとんどの場合、wheezy と jessie 間でパッケージのアップグレードは
    順調に行われるはずです。稀なケースとして、アップグレード前、ある
    いはアップグレード中に調整が必要なものがあります。以下にパッケー
    ジごとの詳細を記述します。

4.5.7.1. systemd

    Debian を wheezy から jessie へとアップグレードする場合、デフォル
    トで SysV から systemd へと init システムを移行します。システムと
    設定に応じて、変更を手動で行う必要があるかもしれません。「Jessie
    での既存 init システムから新しい標準 init システムへのアップグレ
    ードについて」に既知の問題を詳細に記載しています。

4.5.7.2. LXC

    LXC をインストールしてある場合、システムとコンテナをアップグレー
    ドする際に特に注意を払う必要があるでしょう。既知の問題と対処につ
    いて「LXC ホストおよびコンテナのアップグレードについての検討」を
    参照してください。

4.6. カーネルと関連パッケージのアップグレード

    このセクションでは、カーネルのアップグレード方法を説明し、このア
    ップグレードに際して生じる可能性がある問題点を明確にします。
    Debian で提供されている linux-image-* パッケージのいずれかをイン
    ストールしても、カスタマイズしたカーネルをソースからコンパイルし
    てもかまいません。

    このセクションに書かれている多くの情報は、ユーザが Debian のモジ
    ュラーカーネルのいずれかを initramfs-tools や udev とともに使用し
    ているのを前提にしている、ということに注意してください。initrd を
    必要としないカスタムカーネルを使用するのを選択した場合や、initrd
    生成ユーティリティとして異なるものを使用している場合は、このセク
    ションの情報の一部は適切ではないかもしれません。

4.6.1. カーネルメタパッケージのインストール

    wheezy から jessie への dist-upgrade を実行する際、新しい
    linux-image-* メタパッケージを、過去にインストールしていない場合
    にはインストールすることを強くお勧めします。これらのメタパッケー
    ジは、アップグレードの最中に自動的に新しいバージョンのパッケージ
    を取得します。次のように実行すると、どのパッケージがインストール
    されているのかを確認できます:

    # dpkg -l "linux-image*" | grep ^ii | grep -i meta

    何も出力されない場合は、新しい linux-image パッケージを手作業でイ
    ンストールするか、linux-image メタパッケージをインストールする必
    要があります。利用可能な linux-image メタパッケージの一覧を見るに
    は次のように実行してください:

    # apt-cache search linux-image- | grep -i meta | grep -v transition

    どのパッケージを選択すればよいのかわからない場合は、uname -r を実
    行し、似た名前をもつパッケージを探してください。例えば、コマンド
    の出力が '2.6.32-5-amd64' の場合は linux-image-amd64 をインストー
    ルすることをお勧めします。利用可能なパッケージのうち最良のものを
    選ぶ手助けとして、次のように apt-cache を用いて各パッケージのパッ
    ケージ説明の詳細版を参照してもよいでしょう。

    # apt-cache show linux-image-amd64

    インストールするカーネルイメージが決まったら、apt-get install で
    インストールします。次回、再起動可能になった際に新しいカーネルバ
    ージョンが提供するメリットを得るために再起動を実行する必要があり
    ます。ですが、アップグレード後の最初の再起動を実行する前に「再起
    動の前にすべきこと」を参照してください。

    少し勇気のある人には、Debian 上で簡単に自分のカスタムカーネルをコ
    ンパイルするやり方があります。linux-source パッケージで提供される
    カーネルソースをインストールしてください。バイナリパッケージの構
    築には、ソース中の Makefile 中の deb-pkg ターゲットが使えます。さ
    らなる情報は、Debian Linux Kernel Handbook (http://
    kernel-handbook.alioth.debian.org/) にあります。
    debian-kernel-handbook パッケージからも利用できます。

    可能なら、カーネルパッケージのアップグレードをメインの
    dist-upgrade と分けることで、一時的にでも起動不能なシステムにして
    しまうことを極力避けられます。カーネルパッケージのアップグレード
    は、「システムの最小アップグレード」で説明した最小アップグレード
    の手順の後以外では行うべきでないことに注意してください。

4.6.2. ルート (/) および /usr ファイルシステムのマウントとチェックに
関する変更

    initramfs-tools はルートファイルシステムをマウントする間に fsck
    を実行するようになりました。init プログラムとして systemd が選択
    されていて分割された /usr ファイルシステムがある場合、/usr に対し
    ても fsck を実行してからマウントします。

      * /usr がファイルシステムとして分割されている RAID デバイス上に
        あり、かつ /etc/default/mdadm での INITRDSTART 設定が 'all'
        ではない場合、RAID デバイスに含めるように変更する必要がありま
        す。

      * /usr がファイルシステムとして分割されている LVM 論理ボリュー
        ム上にあり、かつ /etc/fstab 内で /usr 行がデバイスを UUID あ
        るいは LABEL で指定している場合、/dev/mapper/VG-LV または /
        dev/VG/LV 形式を使ってデバイスを指定するようにこの行を変更す
        る必要があります。
   
      * /usr ファイルシステムを bind-mount することはできなくなりまし
        た。

      * RTC (real time clock) がローカル時間に設定されていて、ローカ
        ル時間が UTC より進んでいる場合、e2fsck は起動時に時間を巻き
        戻すことに関する警告を表示します (bug #767040 (https://
        bugs.debian.org/767040) 参照)。以下の行を /etc/e2fsck.conf に
        追加すれば、この警告を無効にできます:

        [options]
        broken_system_clock=1

4.7. 再起動の前にすべきこと

    apt-get dist-upgrade が終了したら、「形式的には」アップグレードは
    完了したことになります。しかし、次に再起動する前に面倒を見てやら
    なければならないことがいくつかあります。

      * Wheezy から Jessie へアップグレードする際、初回起動時の前に古
        いパッケージを完全に削除するのは良い考えです。特に、時代遅れ
        (obusolete) な init スクリプトが問題を起こす可能性があります
        。削除したパッケージを見つけて、完全な削除を実行することにつ
        いての詳細は、「削除したパッケージを完全削除する」を参照して
        ください。

4.8. 次期リリースへの準備

    アップグレードの後で、次期リリースに向けてできるいくつかの準備が
    あります。

      * 「アップグレードするのに十分な領域があることを確認する」や「
        利用されなくなったパッケージ」で説明するように、余分、あるい
        は時代遅れ (obsolete) のパッケージを削除してください。それら
        のパッケージが使用する設定ファイルを確認し、パッケージの完全
        削除 (purge) によって、設定ファイルも含めて削除することを検討
        してください。「削除したパッケージを完全削除する」についても
        参照をお願いします。

4.8.1. 削除したパッケージを完全削除する

    一般的に、削除したパッケージを完全に削除 (purge) するのは賢明なこ
    とです。以前のリリースアップグレード (つまりは wheezy へのアップ
    グレード) の際に削除されているパッケージである、あるいはパッケー
    ジがサードパーティベンダーから提供されたものである場合、尚のこと
    となります。特に、古い init.d スクリプトは問題を起こすことが知ら
    れています。

    注意
   
    パッケージの完全削除 (purge) は通常ログファイルについても完全に削
    除を行うので、まずはこのバックアップを行ったほうが良いでしょう。

    以下のコマンドは、設定ファイルをシステムに残して削除されたパッケ
    ージの一覧を (もしあれば) 表示します:

    # dpkg -l | awk '/^rc/ { print $2 }'

    apt-get purge を実行すればパッケージを削除できます。一度でこれら
    のパッケージを削除したい場合は、以下のコマンドで実施できます:

    # apt-get purge $(dpkg -l | awk '/^rc/ { print $2 }')

    aptitude　を利用している場合、上記のコマンドの代わりに以下を使う
    こともできます:

    $ aptitude search '~c'
    $ aptitude purge '~c'

4.9. 廃止予定のコンポーネント

    Debian の次期リリース 9 (コードネーム stretch) では、いくつかの機
    能が廃止されます。システムを 9 へと更新する際の手間を省くため、ユ
    ーザは他の代替へ移行する必要があります。

    以下の機能が廃止予定となっています:

      * hardening-wrapper パッケージは非推奨となっており、Stretch で
        削除される予定です。

4.10. 利用されなくなったパッケージ

    jessie では大量の新規パッケージが導入された一方で、wheezy に存在
    していた極めて古いパッケージの破棄や削除が行われています。これら
    時代遅れのパッケージをアップグレードする手段は提供されていません
    。時代遅れのパッケージを使い続けても構いませんが、Debian プロジェ
    クトでは通常、jessie がリリースされてから 1 年後にセキュリティサ
    ポートを終了します ^[5]。そして、その時点から他のサポートも提供し
    ません。利用可能な代替手段で置き換えれるのであれば、そうすること
    をお勧めします。

    パッケージがディストリビューションから削除された理由は、数多くあ
    ります――もう上流で保守されていない、そのパッケージの保守作業に興
    味を抱く Debian 開発者がもういない、提供していた機能が別のソフト
    ウェア (または新しいバージョン) に取って代わられた、バグのために
    jessie にはもう適さないと見なされた、などです。最後の場合では、当
    該パッケージが「不安定版」ディストリビューション内にはまだ存在し
    ていることがあります。

    更新が完了したシステム内のどのパッケージが「時代遅れ」なのかを検
    出するのは、パッケージ管理用フロントエンドが当該パッケージにその
    旨のマークをつけてくれるので簡単です。aptitude を使っているのなら
    、当該パッケージが「廃止された、またはローカルで作成されたパッケ
    ージ」欄に列記されているのに気づくでしょう。

    Debian バグ追跡システム (https://bugs.debian.org/) は、パッケージ
    が削除された理由についての追加情報を提供してくれることがよくあり
    ます。そのパッケージ自体と ftp.debian.org 擬似パッケージ (https:/
    /bugs.debian.org/cgi-bin/pkgreport.cgi?pkg=ftp.debian.org&archive
    =yes) の両方の、アーカイブ化されたバグ報告を調べてください。

    利用されなくなったパッケージの一覧:

      * postgresql-9.1: 後継となるパッケージは postgresql-9.4 です。
        一旦 OS のアップグレードが完了したら、pg_upgradecluster ツー
        ルを使って PostgreSQL 9.1 クラスターを新しい PostgreSQL バー
        ジョン 9.4 にアップグレードするのについても検討する必要がある
        でしょう。PL/perl 手続き言語のユーザーに対しては、jessie での
        新しい perl バージョンにアップグレードするのを可能にするため
        、jessie では jessie に存在するバージョンの libperl にリンク
        された postgresql-plperl-9.1 パッケージを提供する一方で、デー
        タベースが同様にアップグレードされるまで以前の PL/perl データ
        ベース関数を使えるようにしています。

      * python3.2: 後継となるパッケージは python3.4 です (Version 2.7
        　は wheezy および jessie　の双方でサポートされています)。

      * ruby1.8 および ruby1.9.1: 後継となるパッケージは ruby2.1 です
        。現在の ruby バージョンを追いかけるため、ruby パッケージをイ
        ンストールしてください。

      * mplayer: 代替は mplayer2 および mpv (jessie で新規に追加)。前
        者のパッケージは mplayer とはコマンドライン引数についてや設定
        についてほぼ互換 (に加えて新規機能も追加) となっているのに対
        し、後者については大量の新機能と改善が行われており、開発元
        (upstream) によって活発にメンテナンスされています。

      * openoffice.org: libreoffice を利用してください。

      * squid: 後継となるパッケージは squid3 です。

      * libjpeg-progs: 後継となるパッケージは libjpeg-turbo-progs で
        す。

      * openjdk-6-*: 後継となるパッケージは openjdk-7-* です。

4.10.1. ダミーパッケージ

    wheezy の一部のパッケージは jessie では複数のパッケージに分割され
    ていますが、これは大半がシステムの保守性を改善するためです。この
    ような場合のアップグレード手順を容易にするために、jessie はしばし
    ば「ダミーの」パッケージ―― wheezy での古いパッケージと同じ名前で
    、新規パッケージが自動的にインストールされるような依存関係を備え
    た空のパッケージ――を提供しています。これらの「ダミー」パッケージ
    はアップグレード後は余計なパッケージ扱いとされ、安全に削除するこ
    とができます。

    (すべてではないのですが) 大半のダミーパッケージの説明には、その目
    的が記されています。しかしダミーパッケージの説明文は統一されてい
    ないので、自分のシステム内のダミーパッケージを検出するには、
    deborphan を --guess* オプションつきで使うのが便利でしょう (例:
    --guess-dummy)。一部のダミーパッケージは、アップグレード後に削除
    されることを意図したものではなく、プログラムのどのバージョンが現
    在利用可能な最新版かを長期にわたって追跡するのに使われる、という
    ことに注意してください。


---------------------------------------------------------------------

    ^[1] debconf の優先度を、とても高いレベルに設定していると設定プロ
    ンプトを抑制できますが、デフォルト値があなたのシステムに合わない
    場合、サービスはそのままでは起動に失敗することでしょう。

    ^[2] 例: DNS や DHCP サービス、特に冗長性やフェイルオーバー機能が
    無い場合。DHCP の例では、リースタイムがアップグレード作業が完了す
    る時間よりも短い場合、エンドユーザはネットワークから切り離される
    でしょう。

    ^[3] この機能は、ブートパラメータに panic=0 を付加することで無効
    にできます。

    ^[4] Debian のパッケージ管理システムにおいて、別のパッケージを置
    き換えるように指定されていないパッケージは、通常、別のパッケージ
    の所有ファイルを削除したり置き換えたりすることはできません。

    ^[5] あるいは、1 年以内でも別のリリースが出るときに。一般に、どの
    時点でも、サポートされる安定版リリースは 2 つだけです。

第5章 jessie で知っておくべき問題点

    新しいリリースに導入された変化には当然のように副作用がつきもので
    、どこか他の場所でバグを出してしまうこともあります。この章では、
    現時点で私たちが知っている問題点を記載しています。正誤表・関連パ
    ッケージの付属文書・バグ報告や、「もっと読みたい」で触れられてい
    るその他の情報も読んでください。

5.1. セキュリティサポートにおける制限事項

    Debian がセキュリティ問題に対する最小限のバックポートを約束できな
    いパッケージがいくつか存在しています。これらについては以下の項で
    触れられています。

    Jessie で導入された debian-security-support パッケージが、インス
    トールされたパッケージのセキュリティサポート状況を確認するのに役
    立ちます。

5.1.1. ウェブブラウザにおけるセキュリティ更新の状態

    Debian 8 は複数のブラウザエンジンを含んでおり、これらは一定の割合
    でセキュリティ脆弱性の影響を受けます。高い脆弱性率と一部開発元で
    の長期間サポートブランチの欠落によって、セキュリティ修正をバック
    ポートしてこれらのブラウザをサポートする事が難しくなっています。
    さらに、ライブラリへの内部依存性のため、開発元の新しいリリースバ
    ージョンへの更新を不可能にしています。そのようなものとしては、
    Jessie に含まれている webkit・qtwebkit・khtml エンジンを使ったブ
    ラウザがありますが、これらは完全なセキュリティサポートはされませ
    ん。一般的にこれらのブラウザを信用できないウェブサイトを閲覧する
    のに使うべきではありません。

    通常、ウェブブラウザを利用するには、Iceweasel および Chromium を
    お勧めします。

    Chromium は Webkit のコードベース上に構築されていますが、リーフパ
    ッケージ (他から依存されていないパッケージ) であり、安定版向けに
    最新の Chromium のリリースを再ビルドして更新し続けられる予定です
    。Iceweasel および Icedove についても、安定版向けに最新の ESR (延
    長サポート版) を再ビルドすることで更新を行う予定です。

5.1.2. libv8 および Node.js 界隈のエコシステムに対するセキュリティサ
ポートの欠落

    Node.js プラットフォームは、大量のセキュリティ問題が発生した
    libv8-3.14 上に構成されていますが、現状ではプロジェクト内およびセ
    キュリティチーム内には、これから発生するであろう問題に対処するの
    に必要な大量の時間を費やすのに十分な興味と意思を持った作業者が存
    在していません。

    残念なことに、これは libv8-3.14, nodejs, そして node-* 関連パッケ
    ージのエコシステムは、インターネットから取得した無毒化していない
    データのような信頼できないコンテンツと共には現状利用しないように
    すべきだということです。

    追記しておくと、これらのパッケージは Jessie リリース期間中に一切
    のセキュリティ更新を受けることはありません。

5.1.3. MediaWiki へのセキュリティサポートの早期終了について

    mediawiki 1.19 シリーズへの開発元へのセキュリティサポートは、
    Jessie の予想されているライフサイクル中に終わります。mediawiki パ
    ッケージは、他のパッケージでの依存関係を満たすために含まれていま
    す。

    mediawiki へのセキュリティサポートは、Wheezy へのサポートと併せて
    2016 年 4 月に終了します。

5.2. OpenSSH サーバーのデフォルトが "PermitRootLogin
without-password" になりました

    標準設定をより強化する目的で、openssh-server 設定は
    "PermitRootLogin without-password" になりました。root ユーザーに
    対してパスワード認証を使っている場合、この変更の影響を受ける可能
    性があります。

    openssh-server はこのようなケースの検知を試み、 debconf の質問優
    先度を上げようとでしょう。

    root ユーザーに対してパスワード認証を使い続けたい場合、以下のようにす
    ればこの質問に対して先行設定が可能です:
   
    # "false" という値には混乱させられますが、実際のところ正しいものです。
    $ echo 'openssh-server openssh-server/permit-root-login boolean false' | debconf-set-selections

5.3. Puppet 2.7 / 3.7 の互換性

    Puppet を利用している場合は、Puppet 3.7 は Puppet 2.7 と後方互換
    性がないことに注意してください。他の事柄同様に、指定ルールが変更
    されており、大量の利用されなくなった記法が削除されています。変更
    点については Puppet 3.x リリースノート (https://
    docs.puppetlabs.com/puppet/3/reference/release_notes.html#
    puppet-300) を参照していただきたいのですが、3.7 ではさらに変更が
    行われていることにも気をつけてください。

    アップグレードを進める前に、非推奨設定の警告について現在の
    puppetmaster のログファイルを確認してこれらを修正することは、アッ
    プグレードを完了するのをより楽にしてくれることでしょう。別のやり
    方として、さらにマニフェストを Puppet catalog test (https://
    github.com/duritong/puppet_catalog_test) のようなツールでテストす
    るとアップグレード前に潜在的な問題を発見できるかもしれません。

    Puppet により管理されているシステムを Wheezy から Jessie にアップ
    グレードする場合、その puppetmaster は確実に Puppet バージョン
    3.7 以降である必要があります。Wheezy の puppetmaster がマスターと
    して動作している場合、管理する Jessie システムに接続することがで
    きません。

    互換性の無い変更についての詳細は、Telly upgrade issues (https://
    projects.puppetlabs.com/projects/puppet/wiki/
    Telly_Upgrade_Issues) および "The Angry Guide to Puppet 3" (http:
    //somethingsinistral.net/blog/the-angry-guide-to-puppet-3/) を参
    照してください。

5.4. PHP 5.6 へのアップグレードは挙動の変更があります

    Jessie へのアップグレードは PHP 5.4 から 5.6 へのアップグレードを
    含みます。これにより、ローカルにある PHP スクリプトへ何らかの影響
    があると思われるので、アップグレード前にスクリプトを確認すること
    をお勧めします。以下に問題となる項目の抜粋を挙げます:

      * 暗号化通信に対する中間者攻撃 (man-in-the-middle attack) を防
        ぐため、クライアントストリームはデフォルトで通信相手の証明書
        を検証するようになりました。

        この変更の結果、ssl:// または tls:// ストリームラッパー (例:
        file_get_contents(), fsockopen(), stream_socket_client()) を
        使う既存のコードは、stream context の "verify_peer" 設定によ
        って peer verification を手動で無効にしなければ接続できなくな
        っています。

        この問題についての詳細は、こちらのドキュメント (https://
        wiki.php.net/rfc/tls-peer-verification) を参照してください。

      * PHP での大文字小文字の区別の扱いが、多くの場面で変更されまし
        た:

          + 内部でのクラス・関数・定数の大文字小文字の区別の取り扱い
            は、すべて ASCII で定めるところに従って処理されます。現状
            のロケール設定は無視されます。

          + "self", "parent", "static" キーワードは常に大文字小文字を
            区別しなくなりました。

          + json_decode() 関数は、小文字以外を含む "boolean" 関連値を
            受け付けなくなりました。

      * logo GUID 関数 (例: php_logo_guid()) は削除されました

      * 静的なスカラー配列中のキーを上書きすることができなくなりまし
        た。この問題についての例と詳細は、PHP bug 66015 (https://
        bugs.php.net/bug.php?id=66015) を参照してください。

      * mcrypt_encrypt(), mcrypt_decrypt(), mcrypt_{MODE}() 関数は正
        しくないサイズのキーや初期化ベクトル (IV) を受け付けないよう
        になりました。さらに、ブロック暗号モードが必要とする場合に初
        期化ベクトル (IV) が要求されるようになりました。

      * 法的な問題から、PHP にバンドルされていた JSON 実装は "jsonc"
        PECL モジュールが提供するバージョンに置き換えられました。PHP
        JSON パーサーの内部的な実装に依存しているコードについては、レ
        ビューが必要になるでしょう。

      * "short_open_tag" 設定は標準で無効になりました。ASP 形式のショ
        ートタグ ("<%" および "%>") は PHP7 で削除予定です。

    詳細や潜在的な問題の一覧については、開発元 (upstream) にある PHP
    5.5 (https://php.net/manual/ja/migration55.incompatible.php) なら
    びに 5.6 (https://php.net/manual/ja/migration56.incompatible.php)
    についての非互換性一覧を一読ください。

5.5. Apache HTTPD 2.4 における互換性の無い変更

    注記
   
    この章では、Apache HTTPD サーバーがインストールされ、手動で設定さ
    れているシステムのみについて取り扱います。

    バージョン 2.4 において、Apache HTTPD サーバーの設定には大量の変
    更点があります。開発元での変更点としては、構文が変更されました。
    特に注意すべき点として、アクセスコントロールディレクティブがかな
    り変更されているため、新しいディレクティブへの手動での移行作業が
    必要になるであろうことが挙げられます。

    すぐに移行を行う代わりに、開発元 (usptream) のアップグレードガイ
    ド中では mod_access_compat が代替手段になりえると記されています。
    ですが、これは期待する動作ができるとは限らないという報告がありま
    す。

    Debian パッケージ中での設定ファイルの取り扱いについても変更が加わ
    っています。特に、全ての設定ファイルとサイト設定ファイルは、標準
    設定でパースされるためには、必ず ".conf" で終わらねばならなくなり
    ました。この変更は、既存の /etc/apache2/conf.d/ の利用についても
    置き換えを行います。

    注記

    アップグレード中、Debian から提供されたパッケージに含まれている /
    etc/apache2/conf.d/ に配置された設定ファイルについての警告を見る
    ことになるでしょう。この警告の表示は、不可避ではありますが無害で
    す。影響を受けるパッケージが、アップグレード完了時に設定ファイル
    を移行してくれます (通常、Apache HTTPD がこの警告を表示した後にな
    ります)。

    詳細と変更点一覧については、以下を参照ください:

      * Apache の開発者らから、Upgrading to 2.4 from 2.2 (http://
        httpd.apache.org/docs/2.4/upgrading.html) というドキュメント
        が提供されています。

      * apache2 パッケージによって /usr/share/doc/apache2/
        NEWS.Debian.gz ファイルが提供されています。

5.6. Jessie での既存 init システムから新しい標準 init システムへのア
ップグレードについて

    Jessie は、デフォルトの init システムとして systemd-sysv にてリリ
    ースされました。このパッケージはアップグレード時に自動的にインス
    トールされます。

    sysvinit-core や upstart などの他の init 用の設定を行っていた場合
    は、アップグレードより前に APT pinning 設定を行っておくことを推奨
    します。この作業は、ホストより前に LXC コンテナをアップグレードし
    ている場合にも必要になるかもしれません。このような場合は、「
    Wheezy ホスト上で動作している LXC ゲストのアップグレード」を参照
    してください。

    例として、アップグレード中に systemd-sysv がインストールされない
    ようにするには、/etc/apt/preferences.d/local-pin-init というファ
    イルを以下の内容で作成します:

    Package: systemd-sysv
    Pin: release o=Debian
    Pin-Priority: -1

    注意
   
    非標準の init システム配下では、いくつかのパッケージがより劣った
    動作になるか機能が欠けることになる点については忠告しておきます。

    APT pinning をしていたとしても、"systemd" を含む名前のパッケージ
    がインストールされる点にはご注意ください。これらはどれひとつとし
    て init システムを変更しません。systemd を init システムとして利
    用するには、まず初めに systemd-sysv がインストールされる必要があ
    ります。

    APT または aptitude が、pin を含む適切なアップグレードパスを計算
    するのに時間がかかりすぎる場合、sysvinit-core と systemd-shim の
    両方を手動でインストールすることで手助けができるかもしれません。

5.6.1. systemd 配下での起動時のマウント失敗に対する、より厳格な取り扱
い

    新しい標準 init システムである systemd-sysv は、起動中の "auto"
    マウントの失敗について、sysvinit と比べて厳しく取り扱います。
    ("nofail" オプション無しの) "auto" マウントに失敗した場合、
    systemd は起動を続けるのではなく非常時のシェルに落ちます。

    /etc/fstab 中に記載されている全てのリムーバブルドライブまたは
    "optional" なマウントポイント (例: 必須ではないネットワークドライ
    ブ) については、"noauto" または "nofail" いずれかのオプションの付
    加を推奨します。

5.6.2. 不要になった init スクリプトは完全に削除してください

    以前のリリースからアップグレードする場合、システムには (現在) 削
    除済みのパッケージによって提供されていた、もはや用いられることが
    ない init スクリプトが含まれている可能性があります。このようなス
    クリプトは、依存関係のメタデータが不完全、あるいは全く含まれてな
    い場合があり、これによって init 設定中に循環依存を引き起こす可能
    性があります。

    これを避けるため、"rc" ("Removed, but Config-files remain"、削除
    されたが設定ファイルが残っている) 状態のパッケージ一覧を確認し、
    init スクリプトを含むもの全てを完全に削除することをお勧めします。

    削除済みパッケージの検索と完全削除に関する詳細については、「削除
    したパッケージを完全削除する」を参照してください。

5.6.3. ローカルで変更を加えた init スクリプトは systemd に移植しなけ
ればいけない可能性があります

    注記
   
    この項の内容は、Debian が提供した init スクリプトをローカルで変更
    しているシステムにのみ、適用されます。

    Debian によって提供された init スクリプトのいくつかを変更していた
    場合、systemd の unit ファイルまたは systemd そのものによって置換
    されていることにご注意ください。debsums をインストールしている場
    合、以下のシェルコマンドを使えばローカルで変更した init スクリプ
    トを確認できます。

    debsums -c -e | grep ^/etc/init.d

    別の方法としては、debsums 無しだと以下のように実行できます。

    dpkg-query --show -f'${Conffiles}' | sed 's, /,\n/,g' | \
      grep /etc/init.d | awk 'NF,OFS="  " {print $2, $1}' | \
      md5sum --quiet -c

    コマンドがファイルまたは関連するパッケージがあると出力した、ある
    いはそのサービスに対して systemd が systemd unit ファイルを提供す
    るようになった場合、systemd unit ファイルはローカルで変更した
    init スクリプトより優先されます。変更の理由によって、移行の実施に
    はいくつか異なった方法があります。

    必要な場合は、systemd の unit ファイルを sysvinit スクリプトを起
    動するように上書きすることも可能です。systemd unit ファイルについ
    ての詳細は、以下の資料を参照してください。

      * How Do I Convert A SysV Init Script Into A systemd Service
        File? (http://0pointer.de/blog/projects/
        systemd-for-admins-3.html) (SysV Init スクリプトを sysmted
        Service ファイルにどうやって置き換えるか)

      * systemd.special — Special systemd units (http://0pointer.de/
        public/systemd-man/systemd.special.html)

      * My Service Can't Get Realtime! (http://www.freedesktop.org/
        wiki/Software/systemd/MyServiceCantGetRealtime/) (unit ファイ
        ルから init スクリプトを呼び出す方法についても非常に短い言及
        があります)

5.6.4. plymouth は systemd 配下での起動時にブートプロンプトを必要とし
ます

    起動がインタラクティブな操作を必要とする場合 (例: 暗号化ディスク
    のためにパスワードが必要)、plymouth がインストールかつ設定済であ
    るように必ずしておいてください。plymouth の設定方法については /
    usr/share/doc/plymouth/README.Debian を参照してください。

    plymouth がない場合、ブートプロンプトの消失を見ることになるかもし
    れません。報告では、cryptsetup のプロンプトは見えなくなってはいる
    ものの、入力は受け付けているようだと言っています。この問題に遭遇
    した場合、正しいパスワードを入力すれば動作する可能性があります。

5.6.5. logind と acpid 間でのやり取り

    ACPI イベントは、logind または acpid で管理できるようになりました
    。双方のサービスが異なったやり方でイベントを管理するように設定さ
    れている場合、望まない結果をもたらすことがあります。

    デフォルトではない設定については logind に移行させ、acpid をアン
    インストールすることをお勧めします。あるいは、logind に ACPI イベ
    ントを無視するよう、以下を /etc/systemd/logind.conf へ追加設定す
    るのも良いでしょう:

    HandlePowerKey=ignore
    HandleSuspendKey=ignore
    HandleHibernateKey=ignore
    HandleLidSwitch=ignore

    これによって、デスクトップ環境の挙動が logind の動作に応じて変化
    する可能性があることに注意してください。

5.6.6. systemd 配下でサポートされない crypttab 機能 (例: "keyscript
=...")

    systemd を init システムとして動作させている場合、残念ながらサポ
    ートされない cryptsetup の機能がいくつかあります。以下がその一覧
    です:

      * precheck

      * check

      * checkargs
   
      * noearly

      * loud

      * keyscript

    システムの起動が成功するためには以上のうちのいずれかが必要になっ
    ている場合は、init システムとして sysvinit(sysvinit-core) を使う
    必要があるでしょう。特定の init システムを利用しないようにするに
    は「Jessie での既存 init システムから新しい標準 init システムへの
    アップグレードについて」を参照してください。

    以下のコマンドを実行することで、これらのオプションがあなたのシス
    テムで使われているかどうかを確認できます

    grep -e precheck -e check -e checkargs -e noearly -e loud -e keyscript /etc/crypttab

    何も出力されていなければ、あなたのシステムでは影響を受けるオプシ
    ョンを利用していません。

5.6.7. systemd: SIGKILL が早すぎる問題 [8.1 で修正済み]

    注記
   
    この問題は 8.1 Jessie ポイントリリースで修正されました。

    Jessie のリリース後、systemd についてリグレッションが報告されまし
    た。このバグは、シャットダウンあるいは再起動時、systemd がプロセ
    スに SIGKILL を発行する前に十分な時間を与えていないために発生しま
    す。これにより、再起動の時点で全てのデータを保存してないプロセス
    でデータの損失を招く可能性があります (例: データベースの稼働)。

    この問題は Debian Bug#784720 (https://bugs.debian.org/784720) で
    扱われています。

5.6.8. systemd: 'halt' コマンドの振る舞い

    sysvinit での halt コマンドの実装はマシンも同時に電源を落とします
    。systemd-sysv での実装はシステムを終了させますが、マシンの電源は
    落としません。マシンを終了して電源を落とすには、poweroff コマンド
    を使って下さい。

    Debian Bug#760923 (https://bugs.debian.org/760923) も参照して下さ
    い。

5.7. Jessie で必要とされるカーネル設定オプション

    注記

    この項は、カーネルをコンパイルしている人たちだけに向けたものです
    。Debian によってコンパイルされたカーネルを使っている場合は、この
    項を無視できます。

    Jessie では以下のカーネル設定オプション (および以前のリリースから
    の設定オプション) が必須または推奨となります:

    # Required for udev
    CONFIG_DEVTMPFS=y
    # Required for *some* systemd services
    CONFIG_DEVPTS_MULTIPLE_INSTANCES=y
    # Required by "bluez" (GNOME)
    CONFIG_BT=y
    # Required for cups + systemd.
    CONFIG_PPDEV=y

    CONFIG_DEVPTS_MULTIPLE_INSTANCES=y を必要とする systemd サービス
    は、以下のディレクティブのうち少なくとも一つを決まって必要としま
    す:

    PrivateTmp=yes
    PrivateDevices=yes
    PrivateNetwork=yes
    ProtectSystem=yes

    sysytemd を使っていない、あるいはどの systemd サービスも以上のデ
    ィレクティブを利用することはないと断言できる場合は、あなたのシス
    テムでは必要ないかもしれません。

    要求される事項についての詳細は、systemd パッケージの README
    (https://sources.debian.net/src/systemd/jessie/README/) ファイル
    内にある "REQUIREMENTS" という項を参照してください。

5.8. LXC ホストおよびコンテナのアップグレードについての検討

    注記
   
    この項は、LXC コンテナおよびホストシステムにのみ適用されます。通
    常、一般のエンドユーザーのシステムには存在していません。

    Wheezy から Jessie へのアップグレードは、デフォルトの init システ
    ムを systemd に移行することになります (「Jessie での既存 init シ
    ステムから新しい標準 init システムへのアップグレードについて」参
    照)。

    LXC コンテナあるいは LXC 仮想マシンをアップグレードする際、ホスト
    のシステムが既に Jessie にアップグレードされているか否かによって
    これは違った結論となります。

5.8.1. Wheezy ホスト上で動作している LXC ゲストのアップグレード

    Wheezy ホスト上で動作している LXC ゲストコンテナをアップグレード
    している場合、ゲストが自動的に systemd に移行するのを防ぐ必要があ
    ります。「Jessie での既存 init システムから新しい標準 init システ
    ムへのアップグレードについて」で記述したように、pinning によって
    移行を防ぎます。

    これは、Wheezy ホストが systemd で動作するシステムの起動に必要な
    機能を欠いているために必要になります。

    一旦ホストシステムを Jessie にアップグレードしたら、LXC ゲスト内
    部のシステムを systemd にスイッチできるようになります。Jessie ホ
    ストで順応するために必要になる項目については、次の項を参照して下
    さい。

5.8.2. Jessie ホスト上で動作している LXC ゲストのアップグレード

    LXC ゲストを systemd で起動できるようにするためには、LXC コンテナ
    の設定を調整する必要があります。コンテナ設定は、通常は /var/lib/
    lxc/CONTAINER_NAME/config で確認できます。以下の 2 つの設定の追加
    が必要です:

    lxc.autodev = 1
    lxc.kmsg = 0

5.8.3. 追加情報について

    Debian での LXC についての追加情報については、Debian wiki 内
    (https://wiki.debian.org/LXC) で検索できます。

5.9. LUKS whirlpool で暗号化されたディスクの手動での移行作業 (非標準
設定)

    注記

    この項は、whirlpool ハッシュを使った LUKS 暗号化ディスクを設定し
    ている人たちにだけ向けられたものです。debian-installer はこのよう
    なディスクの作成をサポートしていたことはありません。

    LUKS whirlpool を使った暗号化ディスクを自分で設定していた場合、よ
    り強力なハッシュへ手動で移行する必要があります。以下のコマンドを
    使ってディスクに whirlpool を使っているかどうかを確認できます:

    # /sbin/cryptsetup luksDump <disk-device> | grep -i whirlpool

    移行作業に関する詳細な情報については、cryptsetup FAQ (https://
    code.google.com/p/cryptsetup/wiki/FrequentlyAskedQuestions) の
    "8.3 Gcrypt 1.6.x and later break Whirlpool" の項を参照してくださ
    い。

    注意

    このようなディスクがあった場合、cryptsetup はデフォルトでは暗号化
    の解除を拒否するようになります。root ディスクや他のシステムディス
    ク (例: /usr) が whirlpool で暗号化されていた場合、cryptsetup を
    アップグレードした後の初めての再起動より前に移行を実施しておく必
    要があります。

5.10. GNOME デスクトップは基礎的な 3D グラフィック機能を必要とします

    Jessie での GNOME 3.14 デスクトップでは、基礎的な 3D グラフィック
    をサポートしないマシンに対する fallback サポートは存在しなくなり
    ました。ちゃんと動作させるには、十分に新しい PC が必要です (過去
    10 年に製造された PC であれば、必要となる SSE2 をサポートしていま
    す) 。i386 / amd64 以外のアーキテクチャについては、EGL ドライバを
    利用する 3D グラフィックアダプタを使ってください。

5.11. GNOME デスクトップは AMD のプロプライエタリな FGLRX ドライバー
では動作しません

    他の OpenGL ドライバーと違い、Radeon アダプタ用の AMD FGLRX ドラ
    イバーは EGL インターフェイスをサポートしません。その結果、このド
    ライバーが使われている場合に GNOME デスクトップのコアを含む複数の
    GNOME アプリケーションが起動しません。

    代わりに jessie でデフォルトであるフリー (自由) な radeon ドライ
    バを使うのをお勧めします。

5.12. GNOME の標準キーボードショートカットでの変更

    GNOME デスクトップの標準キーボードショートカットは、他のオペレー
    ティングシステムのものに近しいものになるように、と変更されました
    。

    以前にユーザーによって変更されていたショートカット設定は、アップ
    グレードの際に保存されてます。この設定は、画面上部右のメニューか
    らアクセスして"設定"アイコンをクリックし、GNOME コントロールセン
    ターから設定できます。

5.13. base-passwd によって追加されているシステムユーザーの標準シェル
の変更

    base-passwd パッケージのアップグレードは、システムユーザーのシェ
    ルを "nologin" シェルにリセットすることになります。これには以下の
    ユーザーが含まれます:

      * daemon

      * bin

      * sys

      * sync

      * games

      * man

      * lp

      * mail

      * news

      * uucp

      * proxy

      * www-data

      * backup

      * list

      * irc

      * gnats

      * nobody

    ローカルの設定がこれらのユーザーがシェルを持つようにしておく必要
    がある場合、移行についての質問に「いいえ」と答えるか、移行を実施
    してから必要となるユーザーのシェルを変更する必要があります。よく
    ある例としてはローカルへのバックアップを "backup" ユーザーで
    "ssh-key" 認証を使って実施している場合が含まれます。

    注意
   
    移行は debconf の質問優先度が "高" 以上の場合は自動的に実行されま
    す。

    現在のシェルを指定したユーザーについては維持しておきたい場合、以
    下を実行して先行設定しておくことができます:

    echo 'base-passwd base-passwd/system/username/shell/current-shell-mangled/_usr_sbin_nologin boolean false' | debconf-set-selections

    username には、対象となるユーザーの名前を、current-shell-mangled
    は指定したいシェルの名前で置き換えます。置き換えはアルファベット
    ・ダッシュ(-)・連続したアンダースコア(__) 以外のすべての文字の置
    き換えによって実施されます。例: /bin/bash → _bin_bash

5.14. 新しい KDE E メール・カレンダー・連絡帳 (Kontact) に移行する

    Kontact 個人情報管理システムは大きな変更を迎えました。新しいバー
    ジョンはより大きなメタデータインデックスを使うようになっており、
    各ユーザーのデータはこの新しいインデックスへ移行する必要がありま
    す。

    メール・カレンダーのイベント・連絡先アドレス帳は、ユーザーがログ
    インして関連するコンポーネントが起動した際に自動的に移行されます
    。メールフィルタやカスタムテンプレートのようなちょっと複雑な設定
    には、手作業の介在が必要です。より詳細な情報とトラブルシュートに
    ついての提案に関しては、Debian Wiki (https://wiki.debian.org/KDE/
    Jessie/kontact) に集約されています。

5.15. 複数のデスクトップ環境で仮想コンソール ("getty") が消失する

    注記

    この問題は Jessie で修正されたと現在報告されています。まだ再現で
    きる場合は、Debian Bug#766462 (https://bugs.debian.org/766462) に
    追加報告して下さい。その場合、この問題をまず unarchive する必要が
    あるかもしれないことにご注意下さい (バグの unarchive のやり方につ
    いては、Debian BTS コントロールサーバー (https://www.debian.org/
    Bugs/server-control) のドキュメントを辿ってみて下さい)。

    複数のデスクトップ環境をインストールしていた場合、"仮想コンソール
    "がいずれもログインプロンプトを表示しない可能性があります。

    この問題は plymouth, systemd, そして GNOME のすべてがインストール
    されている場合に起こるようです。これは Debian Bug#766462 (https:/
    /bugs.debian.org/766462) として報告されています。

    カーネルコマンドラインから "splash" 引数を取り除くのが、この問題
    の回避策になるという報告がありました。/etc/default/grub を確認し
    てください。ファイルを更新後に update-grub を実行するのも忘れずに
    。

5.16. "VGA signal out of range" / grub-pc で起動中、何も画面に表示さ
れない

    grub-pc と古いグラフィックカード (例: "ATI Rage 128 Pro Ultra
    TR") には互換性の問題があり、起動中に何も画面に表示されない場合が
    あります。ディスプレイには "VGA signal out of range" (あるいは類
    似の) メッセージが表示されるでしょう。

    シンプルな回避策は /etc/default/grub に GRUB_TERMINAL=console を
    設定することです。

5.17. crontab 中の cron ファイルのより厳重なチェック

    crontab プログラムはより厳重になり、正しくない cron ファイルの場
    合は変更点を保存するのを拒否します。crontab -e で何か問題があった
    場合には、既存のミスについて crontab を確認してください。

5.18. perl による読み込みできないモジュールパスの扱いの変更

    バージョン 5.18 (そして Jessie に含められているのは 5.20) から、
    Perl は @INC 中で読み込み不可能なモジュールパスに遭遇した場合、致
    命的なエラーで終了するようになりました。以前の挙動ではそのような
    エントリをスキップしていました。自分の環境中の @INC の内容につい
    て、world-readable ではないディレクトリを確認して適切な対応をする
    ことをお勧めします。

    Perl でのデフォルトの @INC を見るには perl -V を実行してください
    。

5.19. Ganeti クラスタをアップグレードする際の検討

5.19.1. DRBD を使ったインスタンスを含む Ganeti クラスタのアップグレー
ドに関する問題 [8.1 で修正済]

    注記
   
    この問題は 8.1 Jessie ポイントリリースで修正されました。

    Jessie でリリースされた ganeti (2.12.0-3) は、DRBD ディスクを使っ
    たインスタンスがある場合、 2.5 以前で動作しているインストールから
    の移行をサポートしていません (これには Wheezy を含みます)。この問
    題は、ポイントリリースで修正されることが期待されており、現在のと
    ころは影響を受ける Ganeti クラスタをアップグレードしないことを推
    奨します。この問題に関する詳細については、Debian Bug#783186
    (https://bugs.debian.org/783186) で得られます。

5.19.2. Ganeti クラスタのアップグレードに関する一般的な注意事項

    Ganeti cluster について、Wheezy の ganeti バージョン (2.5.2-1) か
    ら Jessie (2.12.0-3) へのアップグレード推奨手順は、一度にすべての
    インスタンスを停止してアップグレードし、再起動を行うことです。こ
    れによって、すべてのインスタンスが Jessie でのバージョンのハイパ
    ーバイザー配下で動作していることと、すべてのノードが同一バージョ
    ンの Ganeti と DRBD を走らせていることを保証します。

    バージョン 2.5 のノードと 2.12 のノードの混在したクラスタの動作は
    サポートされていない点にご注意下さい。また、ハイパーバイザーによ
    りますが、Wheezy と Jessie のハイパーバイザーのバージョン間でのラ
    イブマイグレーションは動作しないことがあります。

5.20. Samba4 でのファイル実行についての新たな必要事項

    クライアントが、ファイルは"opened for execution"であると要求した
    場合、Samba4 は通常の読み取り権限に加えて実行ビットの設定を要求す
    るようになっています。この実行ビットが欠落している場合、
    "netlogon" スクリプトが特に警告もなく無視されるようになる原因にも
    なっています。

5.21. cryptsetup は BUSYBOX=n では起動できなくなる可能性があります

    注記
   
    この項は、手動で /etc/initramfs-tools/initramfs.conf に busybox
    を使わないよう設定した人たちにのみ向けたものです。

    busybox と cryptsetup を両方共インストールしていて、さらに
    initramfs について busybox を使わないように設定している場合、結果
    としてシステムが起動不可能になるかもしれません。

    二つのパッケージがインストールされている場合、/etc/
    initramfs-tools/initramfs.conf 中のBUSYBOX 設定の値を確認してくだ
    さい。この場合、既知の回避策は busybox のアンインストールか、/etc
    /initramfs-tools/initramfs.conf で BUSYBOX=y に設定することです。

    警告

    何か変更を行った際、initramfs を更新するために update-initramfs
    -u の実行を忘れないで下さい。さもなければ起動が壊れたままの羽目に
    なるでしょう。

    詳細については Debian Bug#783297 (https://bugs.debian.org/783297)
    を参照してください。

5.22. Squid ウェブプロキシでの後方互換性のない変更

    注記
   
    この章は squid ウェブプロキシをインストールしてある人にだけ適用さ
    れます。

    squid の設定は、互換性のない形で変更されました。特にいくつかの
    squid "ヘルパー" は名前が変更されています。もし、あなたの設定が既
    に存在しない過去の機能やヘルパーの以前の名前機能に依存していた場
    合、アップグレード後に squid サービスは起動に失敗するでしょう。

    詳細については upstream のリリースノートを参照してください。以下
    が参考になります:

      * Squid 3.2 リリースノート (http://www.squid-cache.org/Versions
        /v3/3.2/RELEASENOTES.html) (リネームされたヘルパーについては
        以下で参照できます: 2.6 ヘルパー名の変更 (http://
        www.squid-cache.org/Versions/v3/3.2/RELEASENOTES.html#ss2.6)
        )

      * Squid 3.3 リリースノート (http://www.squid-cache.org/Versions
        /v3/3.3/RELEASENOTES.html)

      * Squid 3.4 リリースノート (http://www.squid-cache.org/Versions
        /v3/3.4/RELEASENOTES.html)

第6章 Debian に関するさらなる情報

6.1. もっと読みたい

    このリリースノートやインストールガイドを越えた、Debian に関するよ
    り詳細な文書が、Debian Documentation Project (DDP) から公開されて
    います。DDP は Debian のユーザや開発者向けに、品質の高い文書を作
    成することを目的としています。Debian リファレンス、Debian 新メン
    テナガイド、Debian FAQ などなど、たくさんの文書があります。現在利
    用可能なリソースの詳細すべては DDP のウェブサイト (https://
    www.debian.org/doc/) およびDebian Wiki のウェブサイト (https://
    wiki.debian.org/) から得られます。

    それぞれのパッケージの文書は /usr/share/doc/パッケージにインスト
    ールされています。ここには、著作権情報、Debian 固有の詳細、開発元
    の文書すべて、などが置かれています。

6.2. 助けを求めるには

    Debian ユーザ向けのヘルプ・アドバイス・サポートなどは、いろいろな
    場所から得られます。しかしこれらを頼りにするのは、その問題につい
    て徹底的に文書を調査してからにしましょう。このセクションでは新し
    く Debian ユーザになった人向けに、これらを簡単に紹介します。

6.2.1. メーリングリスト

    Debian ユーザが最も興味を引かれるであろうメーリングリストは
    debian-user (英語) リストおよび debian-user-言語 (各国語) リスト
    でしょう。これらのリストの詳細や講読のしかたについては、https://
    lists.debian.org/ (https://lists.debian.org/) を見てください。利
    用にあたっては、あなたの疑問に対する答えが以前の投稿ですでに答え
    られていないかどうか、アーカイブをチェックしてください。また標準
    的なメーリングリストのエチケットに従うようにしてください。

6.2.2. インターネットリレーチャット (IRC)

    Debian には、Debian ユーザのサポートや援助のために専用の IRC チャ
    ンネルが OFTC IRC ネットワークにあります。このチャンネルにアクセ
    スするには、お好みの IRC クライアントを irc.debian.org に接続し、
    #debian に join してください。

    チャンネルのガイドラインに従い、他のユーザをきちんと尊重してくだ
    さい。ガイドラインは Debian Wiki (https://wiki.debian.org/
    DebianIRC) で参照できます。

    OFTC についてさらに詳しく知りたい場合は、ウェブサイト (http://
    www.oftc.net/) を訪ねてみてください。

6.3. バグを報告する

    私たちは Debian を高品質な OS にするよう努めていますが、だからと
    いって私たちの提供するパッケージにバグが皆無というわけではありま
    せん。Debian の「オープンな開発体制」という考え方に合致し、また、
    ユーザに対するサービスとして、私たちは報告されたバグに関するすべ
    ての情報をバグ追跡システム (Bug Tracking System: BTS) で提供して
    います。この BTS は https://bugs.debian.org/ (https://
    bugs.debian.org/) で閲覧できます

    もしディストリビューションや、その一部であるパッケージされたソフ
    トウェアにバグを見つけたら、将来のリリースで修正できるよう、その
    問題点の報告をお願いします。バグを報告するには有効な電子メールア
    ドレスが必要です。これをお願いしているのは、バグを追跡できるよう
    にするため、そして追加情報が必要になった場合に開発者が報告者に連
    絡できるようにするためです。

    バグ報告は、reportbug プログラムを使って送信することもできますし
    、電子メールを使って手で送ることもできます。バグ追跡システムに関
    する詳細やその使い方については、リファレンス文書 (doc-debian パッ
    ケージをインストールしていれば /usr/share/doc/debian にあります)
    をお読み頂くか、またはバグ追跡システム (https://bugs.debian.org/)
    のウェブサイトからオンラインで入手することもできます。

6.4. Debian に貢献する

    Debian への貢献は専門家でなくてもできます。問題を抱えたユーザを、
    いろいろなサポートメーリングリスト (https://lists.debian.org/) で
    助けてあげることも、立派なコミュニティへの貢献です。開発メーリン
    グリスト (https://lists.debian.org/) に参加して、ディストリビュー
    ション開発に関する問題を見つける (そして解決する) ことも、もちろ
    ん非常に助けになります。Debian を高品質なディストリビューションに
    保つため、バグを報告して (https://bugs.debian.org/) その原因の特
    定や解決に際して開発者を助けてください。how-can-i-help というツー
    ルが作業するのに適した報告済みのバグを探すのに役立つでしょう。執
    筆が得意なら、文書 (https://www.debian.org/doc/) 作成や既存文書の
    自分の言語への翻訳 (https://www.debian.org/international/) に積極
    的に参加し、そこで貢献するのもよいでしょう。

    もっと時間が自由になるなら、Debian に属するフリーソフトウェア集の
    一部を管理してみるのはどうでしょうか。皆が Debian に入れてほしい
    と思っているソフトウェアを引き受けて管理するのは、特に価値の高い
    貢献です。これに関する詳細は、作業が望まれるパッケージのデータベ
    ース (https://www.debian.org/devel/wnpp/) をご覧になってください
    。Debian にはいくつかサブプロジェクト (https://www.debian.org/
    devel/#projects) が存在しており、特定のアーキテクチャへの移植や、
    特定のユーザ層向けの Debian Pure Blends (https://wiki.debian.org/
    DebianPureBlends) などがあります。これらのうち、あなたが興味を持
    っているグループに参加するのもよいでしょう。

    いずれにしても、あなたが何らかの形でフリーソフトウェアコミュニテ
    ィに関わっているのなら、それがユーザとしてであれ、プログラマ、ラ
    イター、翻訳者のいずれとしてであれ、すでにあなたはフリーソフトウ
    ェア運動を助けてくださっているのです。貢献することは報いのあるこ
    とですし、楽しいことです。新しい人々に出会う機会も増えます。きっ
    と暖かで楽しい気持ちになれるはずです。

付録A アップグレードの前に wheezy システムを調整する

    この付録には、jessie へアップグレードする前に wheezy パッケージを
    確実にインストールしたりアップグレードする方法についての情報が述
    べられています。特定の状況でのみ必要となるでしょう。

A.1. wheezy システムのアップグレード

    基本的には、これまで行ってきた wheezy のあらゆるアップグレードと
    違いはありません。唯一異なるのは、「ソースリストのチェック」で説
    明するように、パッケージリスト内に wheezy への参照がまだ含まれて
    いるのを確認する必要があることです。

    Debian ミラーを使用してシステムをアップグレードする場合、システム
    は自動的に最新の wheezy ポイントリリースへとアップグレードされま
    す。

A.2. ソースリストのチェック

    /etc/apt/sources.list 内で 'stable' を指定している行があるなら、
    効率よく jessie を「使う」用意ができています。もしアップグレード
    の準備がまだできていない場合には、これはお望みの設定ではないかも
    しれません。すでに apt-get update を実行済みでも、以下の手順に従
    えば問題なく元に戻すことができます。

    jessie からパッケージのインストールもしてしまっているなら、おそら
    くこれ以上 wheezy からパッケージをインストールしても無意味でしょ
    う。この場合、続けるかどうかを自分で決断しなければなりません。パ
    ッケージをダウングレードすることはできますが、その方法はここでは
    扱いません。

    (root になってから) お気に入りのエディタで /etc/apt/sources.list
    を開き、deb http: や deb ftp: で始まるすべて行の中に「stable」が
    指定されているかどうかを調べてください。もしあるなら、stable を
    wheezy に変更してください。

    deb file: で始まっている行があるなら、その行が指定している場所が
    wheezy か jessie のどちらのアーカイブなのかを独力で調べなければな
    らないでしょう。

    重要

    deb cdrom: で始まっている行は、絶対に変更しないでください。変更す
    るとその行は無効になって、もう一度 apt-cdrom を実行しなければなら
    なくなるでしょう。'cdrom' ソースが「unstable」を指定していても心
    配しないでください。混乱するかもしれませんが、これで正常なのです
    。

    変更が済んだら、ファイルを保存してから

    # apt-get update

    と実行して、パッケージリストを更新してください。

A.3. 古く不要になった設定ファイルを削除する

    システムを jessie へアップグレードする前に、古い設定ファイル (/
    etc 以下にある *.dpkg-{new,old} ファイルなど) をシステムから削除
    することを推奨します。

A.4. 古いロケールから UTF-8 へアップグレードする

    システムがローカライズされており、UTF-8 ベースではないロケールを
    使っている場合、システムが UTF-8 を使うように変更するのをよく考え
    るべきです。過去、UTF-8 ではないロケールを使っている場合のみ明ら
    かになるバグ^[6]がありました。デスクトップでは、このようなレガシ
    ーなロケールはライブラリ内部での醜いハックによってサポートされて
    いるので、まだレガシーロケールを使ってるユーザに対してきちんとし
    たサポートを提供できません。

    dpkg-reconfigure localesを実行すれば、システムのロケールを設定で
    きます。どのロケールをシステムのデフォルトとして使うかの質問を提
    示された時、確実に UTF-8 ロケールを選んでください。さらに、ロケー
    ルを再度調査して、ユーザの環境設定中でレガシーなロケール定義がさ
    れていないことを確認する必要があります。


---------------------------------------------------------------------

    ^[6] UTF-8 を使っていない場合には、GNOME スクリーンセーバーでスク
    リーンロックを解除する機能を有効にしていても、以下のような設定で
    は動作が保証されない可能性があります: ASCII 文字列以外のパスワー
    ドを利用している、pam_ldap サポートを有効にしている。GNOME スクリ
    ーンリーダーは、バグ#599197 (http://bugs.debian.org/599197) の影
    響を受けます。shell が現在のロケールでのエンコーディングであると
    仮定しているにも関わらず、Nautilus ファイルマネージャー (そして全
    ての glib ベースのプログラム、加えておそらく全ての Qt ベースのプ
    ログラム) は、ファイル名を UTF-8 として取扱います。さらに
    gnome-orca スクリーンリーダーは、Squeeze から UTF-8 ロケールを必
    要としています。レガシーな文字コードセット使用下では、Nautilus/
    GNOME パネルあるいは Alt-F1 メニューのようなウィンドウ情報を読み
    取ることができません。

付録B リリースノートの貢献者たち

    たくさんの人々がリリースノートを手伝ってくれました。以下の方々も
    そうですが、他にもいらっしゃいます。

    Adam Di Carlo, Andreas Barth, Popescu Andrei [FAMILY Given], 
    Bezemer Anne [FAMILY Given], Hilliard Bob [FAMILY Given], Plessy 
    Charles [FAMILY Given], Perrier Christian [FAMILY Given], Baumann
    Daniel [FAMILY Given], Prévot David [FAMILY Given], Petrișor Eddy
    [FAMILY Given], Kasper Emmanuel [FAMILY Given], Arajärvi Esko
    [FAMILY Given], Pop Frans [FAMILY Given], Rapagnani Giovanni
    [FAMILY Given], Farquharson Gordon [FAMILY Given], 
    Fernández-Sanguino Peña Javier [FAMILY Given], Seidel Jens
    [FAMILY Given], Meurer Jonas [FAMILY Given], Nieder Jonathan
    [FAMILY Given], van Baal-Ilić Joost [FAMILY Given], Rodin Josip
    [FAMILY Given], Cristau Julien [FAMILY Given], Rye Justin B
    [FAMILY Given], Jones LaMont [FAMILY Given], Claes Luk [FAMILY
    Given], Michlmayr Martin [FAMILY Given], Biebl Michael [FAMILY
    Given], Mühlenhoff Moritz [FAMILY Given], Thykier Niels [FAMILY
    Given], Meyerhans Noah [FAMILY Given], 小林儀匡 [FAMILY Given], 
    青木修 [FAMILY Given], Green Peter [FAMILY Given], Bradford Rob
    [FAMILY Given], Thibault Samuel [FAMILY Given], Bienlein Simon
    [FAMILY Given], Paillard Simon [FAMILY Given], Fritsch Stefan
    [FAMILY Given], Langasek Steve [FAMILY Given], McIntyre Steve
    [FAMILY Given], Scherer Tobias [FAMILY Given], McIntyre Vincent
    [FAMILY Given], and Borgert W. Martin [FAMILY Given]

    この文書はたくさんの言語に翻訳されています。翻訳者に大きな感謝を
    捧げます!

    日本語への翻訳は以下の方が行いました。やまねひでき [FAMILY Given]

索引

A

Abiword, ディストリビューションの最新情報
Apache, ディストリビューションの最新情報

B

BIND, ディストリビューションの最新情報
Blu-ray, CD、DVD、Blu-ray ディスク

C

Calligra, ディストリビューションの最新情報
CD, CD、DVD、Blu-ray ディスク
Courier, ディストリビューションの最新情報

D

Dia, ディストリビューションの最新情報
DocBook XML, この文書のソース
DVD, CD、DVD、Blu-ray ディスク

E

Evolution, ディストリビューションの最新情報
Exim, ディストリビューションの最新情報

G

GCC, ディストリビューションの最新情報
GNOME, ディストリビューションの最新情報
GNUcash, ディストリビューションの最新情報
GNUmeric, ディストリビューションの最新情報

K

KDE, ディストリビューションの最新情報

L

LibreOffice, ディストリビューションの最新情報
LXDE, ディストリビューションの最新情報

O

OpenSSH, ディストリビューションの最新情報

P

packages

    apache2, Apache HTTPD 2.4 における互換性の無い変更
    apt, アップグレードについての報告をする, APT の取得先 (ソース) の
        準備, APT のインターネットソースの追加, APT のローカルミラー
        ソースの追加
    apt-listchanges, システムの最小アップグレード
    aptitude, アップグレードするのに十分な領域があることを確認する, 
        削除したパッケージを完全削除する
    base-passwd, base-passwd によって追加されているシステムユーザーの
        標準シェルの変更
    busybox, cryptsetup は BUSYBOX=n では起動できなくなる可能性があり
        ます
    cryptsetup, LUKS whirlpool で暗号化されたディスクの手動での移行作
        業 (非標準設定), cryptsetup は BUSYBOX=n では起動できなくなる
        可能性があります
    dblatex, この文書のソース
    debian-goodies, アップグレードするのに十分な領域があることを確認
        する
    debian-kernel-handbook, カーネルメタパッケージのインストール
    debian-security-support, セキュリティ, セキュリティサポートにおけ
        る制限事項
    doc-debian, バグを報告する
    docbook-xsl, この文書のソース
    dpkg, アップグレードについての報告をする
    games-content-dev, Debian Games Blend
    ganeti, DRBD を使ったインスタンスを含む Ganeti クラスタのアップグ
        レードに関する問題 [8.1 で修正済], Ganeti クラスタのアップグ
        レードに関する一般的な注意事項
    gcc, セキュリティ
    grub-pc, "VGA signal out of range" / grub-pc で起動中、何も画面に
        表示されない
    hardening-wrapper, 廃止予定のコンポーネント
    how-can-i-help, Debian に貢献する
    initramfs-tools, initrd を使った起動中のデバッグシェル, カーネル
        と関連パッケージのアップグレード, ルート (/) および /usr ファ
        イルシステムのマウントとチェックに関する変更
    libjpeg-progs, 利用されなくなったパッケージ
    libjpeg-turbo-progs, 利用されなくなったパッケージ
    libreoffice, 利用されなくなったパッケージ
    libv8-3.14, libv8 および Node.js 界隈のエコシステムに対するセキュ
        リティサポートの欠落
    linux-image-*, カーネルと関連パッケージのアップグレード
    linux-image-amd64, カーネルメタパッケージのインストール
    linux-source, カーネルメタパッケージのインストール
    localepurge, アップグレードするのに十分な領域があることを確認する
    mediawiki, MediaWiki へのセキュリティサポートの早期終了について
    mplayer, 利用されなくなったパッケージ
    mplayer2, 利用されなくなったパッケージ
    mpv, 利用されなくなったパッケージ
    needrestart, セキュリティ
    nodejs, libv8 および Node.js 界隈のエコシステムに対するセキュリテ
        ィサポートの欠落
    openjdk-6-*, 利用されなくなったパッケージ
    openjdk-7-*, 利用されなくなったパッケージ
    openoffice.org, 利用されなくなったパッケージ
    openssh-server, OpenSSH サーバーのデフォルトが "PermitRootLogin
        without-password" になりました
    perl, perl による読み込みできないモジュールパスの扱いの変更
    php-horde, PHP アプリケーション
    plymouth, plymouth は systemd 配下での起動時にブートプロンプトを
        必要とします, 複数のデスクトップ環境で仮想コンソール
        ("getty") が消失する
    popularity-contest, アップグレードするのに十分な領域があることを
        確認する
    postgresql-9.1, 利用されなくなったパッケージ
    postgresql-9.4, 利用されなくなったパッケージ
    postgresql-plperl-9.1, 利用されなくなったパッケージ
    puppetmaster, Puppet 2.7 / 3.7 の互換性
    python3.2, 利用されなくなったパッケージ
    python3.4, 利用されなくなったパッケージ
    release-notes, この文書に関するバグを報告する
    ruby, 利用されなくなったパッケージ
    ruby1.8, 利用されなくなったパッケージ
    ruby1.9.1, 利用されなくなったパッケージ
    ruby2.1, 利用されなくなったパッケージ
    squid, 利用されなくなったパッケージ
    squid3, 利用されなくなったパッケージ
    systemd, 新しい標準 init システム (systemd), ローカルで変更を加え
        た init スクリプトは systemd に移植しなければいけない可能性が
        あります, Jessie で必要とされるカーネル設定オプション, 複数の
        デスクトップ環境で仮想コンソール ("getty") が消失する
    systemd-shim, Jessie での既存 init システムから新しい標準 init シ
        ステムへのアップグレードについて
    systemd-sysv, 新しい標準 init システム (systemd), Jessie での既存
        init システムから新しい標準 init システムへのアップグレードに
        ついて, systemd 配下での起動時のマウント失敗に対する、より厳
        格な取り扱い, systemd: 'halt' コマンドの振る舞い
    sysvinit, 新しい標準 init システム (systemd), systemd を使った起
        動中のデバッグシェル, systemd: 'halt' コマンドの振る舞い
    sysvinit-core, Jessie での既存 init システムから新しい標準 init
        システムへのアップグレードについて, systemd 配下でサポートさ
        れない crypttab 機能 (例: "keyscript=...")
    tinc, アップグレード用の安全な環境の準備
    udev, カーネルと関連パッケージのアップグレード
    upgrade-reports, アップグレードについての報告をする
    upstart, Jessie での既存 init システムから新しい標準 init システ
        ムへのアップグレードについて
    xmlroff, この文書のソース
    xsltproc, この文書のソース

Perl, ディストリビューションの最新情報
PHP, ディストリビューションの最新情報
Postfix, ディストリビューションの最新情報
PostgreSQL, ディストリビューションの最新情報

X

Xfce, ディストリビューションの最新情報

用語集

ACPI

    Advanced Configuration and Power Interface

ALSA

    Advanced Linux Sound Architecture

APM

    Advanced Power Management

BD

    Blu-ray ディスク

CD

    コンパクトディスク

CD-ROM

    Compact Disc Read Only Memory

DHCP

    Dynamic Host Configuration Protocol

DNS

    ドメインネームシステム

DVD

    デジタルバーサタイルディスク

GIMP

    GNU Image Manipulation Program

GNU

    GNU は Unix ではない (GNU's Not Unix)

GPG

    GNU Privacy Guard

IDE

    Integrated Drive Electronics

LDAP

    Lightweight Directory Access Protocol

LILO

    LInux LOader

LSB

    Linux Standard Base

LVM

    論理ボリュームマネージャ (Logical Volume Manager)

MTA

    メール転送エージェント (Mail Transport Agent)

NBD

    ネットワークブロックデバイス

NFS

    ネットワークファイルシステム

NIC

    ネットワークインターフェースカード

NIS

    ネットワークインフォメーションサービス

OSS

    Open Sound System

RAID

    Redundant Array of Independent Disks

RPC

    リモートプロシージャコール

SATA

    Serial Advanced Technology Attachment

SSL

    セキュアソケットレイヤー (Secure Sockets Layer)

TLS

    トランスポートレイヤーセキュリティー (Transport Layer Security)

UEFI

    ユニファイドエクステンシブルファームウェアインターフェイス
    (Unified Extensible Firmware Interface)

USB

    ユニバーサルシリアルバス (Universal Serial Bus)

UUID

    汎用一意識別子 (Universally Unique Identifier)

VGA

    Video Graphics Array

WPA

    Wi-Fi Protected Access

